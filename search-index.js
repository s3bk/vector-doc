var searchIndex={};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"into","","",0,[[],["result"]]],[11,"clone","","",0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["itertools"] = {"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator's elements into one element by…",null,[[["i"]]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[["j"],["i"],["f"]],[["option",["diff"]],["diff"]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[["f"],["st"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[["f"],["st"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[["j"],["i"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[["j"],["i"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[["j"],["i"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[["j"],["i"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",null,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",null,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[["str"],["i"]],["string"]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[["i"]],["intoiter"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[["j"],["i"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[["j"],["i"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[11,"with_value","","put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option"]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],["a"],["eitherorboth"]]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["a"],["eitherorboth"],["b"]]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth"]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[["f"],["g"]],["eitherorboth"]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[["f"]],["t"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","An [`Iterator`] blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse"]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[["cmp"]],["dedupby"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["usize"]],["combinations"]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[["usize"]],["combinationswithreplacement"]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[["usize"]],["permutations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["j"],["self"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[["str"],["self"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option"]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option"]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter"]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["vec"],["hashmap",["vec"]]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["result",["exactlyoneerror"]],["exactlyoneerror"]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"into_iter","","",51,[[],["i"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"into_iter","","",53,[[],["i"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"cmp","itertools","",0,[[["self"],["either"]],["ordering"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"deref","","",0,[[["self"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"into","","",0,[[],["result"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"into","itertools","",4,[[],[["option",["either"]],["either"]]]],[11,"next_back","itertools::structs","",19,[[["self"]],["option"]]],[11,"next_back","","",26,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",49,[[["self"]],["option"]]],[11,"next_back","","",59,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"count","","",29,[[],["usize"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"last","","",29,[[],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"fold","","",17,[[["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"fold","","",14,[[["acc"],["g"]],["acc"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["acc"],["fold"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[],["c"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["g"]],["acc"]]],[11,"collect","","",27,[[],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"fold","","",42,[[["b"],["f"]],["b"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"count","","",47,[[],["usize"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,[[["self"]]]],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,[[["self"]]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"size_hint","","",53,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"count","","",56,[[],["usize"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"count","","",55,[[],["usize"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,[[["self"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"clone","","",29,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",28,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["whilesome"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["combinationswithreplacement"]]],[11,"clone","","",33,[[["self"]],["exactlyoneerror"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","","",42,[[["self"]],["intersperse"]]],[11,"clone","","",43,[[["self"]],["kmergeby"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",51,[[["self"]],["iterate"]]],[11,"clone","","",56,[[["self"]],["uniqueby"]]],[11,"clone","","",55,[[["self"]],["unique"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",58,[[["self"]],["zipeq"]]],[11,"clone","","",59,[[["self"]],["ziplongest"]]],[11,"clone","","",60,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"eq","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"ne","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"eq","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"ne","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"fmt","itertools::structs","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],["option",["level"]]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["level"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"ne","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"cmp","","",0,[[["level"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["level"],["self"]],["bool"]]],[11,"le","","",0,[[["level"],["self"]],["bool"]]],[11,"gt","","",0,[[["level"],["self"]],["bool"]]],[11,"ge","","",0,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["level"],["self"]],["bool"]]],[11,"le","","",1,[[["level"],["self"]],["bool"]]],[11,"gt","","",1,[[["level"],["self"]],["bool"]]],[11,"ge","","",1,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["level"],["result",["level"]]]]],[11,"from_str","","",1,[[["str"]],[["levelfilter"],["result",["levelfilter"]]]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["pathfinder_geometry"] = {"doc":"Basic geometry and linear algebra primitives, optimized…","i":[[0,"angle","pathfinder_geometry","Angle utilities.",null,null],[5,"angle_from_degrees","pathfinder_geometry::angle","",null,[[["f32"]],["f32"]]],[0,"line_segment","pathfinder_geometry","Line segment types, optimized with SIMD.",null,null],[3,"LineSegment2F","pathfinder_geometry::line_segment","",null,null],[12,"0","","",0,null],[3,"LineSegmentU4","","",null,null],[12,"from","","",1,null],[12,"to","","",1,null],[3,"LineSegmentU8","","",null,null],[12,"from_x","","",2,null],[12,"from_y","","",2,null],[12,"to_x","","",2,null],[12,"to_y","","",2,null],[11,"new","","",0,[[["vector2f"]],["linesegment2f"]]],[11,"from","","",0,[[],["vector2f"]]],[11,"to","","",0,[[],["vector2f"]]],[11,"set_from","","",0,[[["vector2f"],["self"]]]],[11,"set_to","","",0,[[["vector2f"],["self"]]]],[11,"from_x","","",0,[[],["f32"]]],[11,"from_y","","",0,[[],["f32"]]],[11,"to_x","","",0,[[],["f32"]]],[11,"to_y","","",0,[[],["f32"]]],[11,"set_from_x","","",0,[[["f32"],["self"]]]],[11,"set_from_y","","",0,[[["f32"],["self"]]]],[11,"set_to_x","","",0,[[["f32"],["self"]]]],[11,"set_to_y","","",0,[[["f32"],["self"]]]],[11,"translate","","",0,[[["vector2f"]],["linesegment2f"]]],[11,"scale","","",0,[[["f32"]],["linesegment2f"]]],[11,"scale_xy","","",0,[[["vector2f"]],["linesegment2f"]]],[11,"split","","",0,[[["f32"]]]],[11,"split_at_x","","",0,[[["f32"]]]],[11,"split_at_y","","",0,[[["f32"]]]],[11,"solve_t_for_x","","",0,[[["f32"]],["f32"]]],[11,"solve_t_for_y","","",0,[[["f32"]],["f32"]]],[11,"solve_x_for_y","","",0,[[["f32"]],["f32"]]],[11,"solve_y_for_x","","",0,[[["f32"]],["f32"]]],[11,"reversed","","",0,[[],["linesegment2f"]]],[11,"upper_point","","",0,[[],["vector2f"]]],[11,"min_x","","",0,[[],["f32"]]],[11,"max_x","","",0,[[],["f32"]]],[11,"min_y","","",0,[[],["f32"]]],[11,"max_y","","",0,[[],["f32"]]],[11,"y_winding","","",0,[[],["i32"]]],[11,"orient","","",0,[[["i32"]],["linesegment2f"]]],[11,"square_length","","",0,[[],["f32"]]],[11,"vector","","",0,[[],["vector2f"]]],[11,"intersection_t","","",0,[[["linesegment2f"]],[["f32"],["option",["f32"]]]]],[11,"sample","","",0,[[["f32"]],["vector2f"]]],[11,"midpoint","","",0,[[],["vector2f"]]],[11,"offset","","",0,[[["f32"]],["linesegment2f"]]],[11,"is_zero_length","","",0,[[],["bool"]]],[0,"rect","pathfinder_geometry","2D axis-aligned rectangles, optimized with SIMD.",null,null],[3,"RectF","pathfinder_geometry::rect","",null,null],[12,"0","","",3,null],[3,"RectI","","NB: The origin is inclusive, while the lower right point…",null,null],[12,"0","","",4,null],[11,"new","","",3,[[["vector2f"]],["rectf"]]],[11,"from_points","","",3,[[["vector2f"]],["rectf"]]],[11,"origin","","",3,[[],["vector2f"]]],[11,"size","","",3,[[],["vector2f"]]],[11,"origin_x","","",3,[[],["f32"]]],[11,"origin_y","","",3,[[],["f32"]]],[11,"width","","",3,[[],["f32"]]],[11,"height","","",3,[[],["f32"]]],[11,"upper_right","","",3,[[],["vector2f"]]],[11,"lower_left","","",3,[[],["vector2f"]]],[11,"lower_right","","",3,[[],["vector2f"]]],[11,"set_origin_x","","",3,[[["f32"],["self"]]]],[11,"set_origin_y","","",3,[[["f32"],["self"]]]],[11,"contains_point","","",3,[[["vector2f"]],["bool"]]],[11,"contains_rect","","",3,[[["rectf"]],["bool"]]],[11,"is_empty","","",3,[[],["bool"]]],[11,"union_point","","",3,[[["vector2f"]],["rectf"]]],[11,"union_rect","","",3,[[["rectf"]],["rectf"]]],[11,"intersects","","",3,[[["rectf"]],["bool"]]],[11,"intersection","","",3,[[["rectf"]],[["option",["rectf"]],["rectf"]]]],[11,"min_x","","",3,[[],["f32"]]],[11,"min_y","","",3,[[],["f32"]]],[11,"max_x","","",3,[[],["f32"]]],[11,"max_y","","",3,[[],["f32"]]],[11,"center","","",3,[[],["vector2f"]]],[11,"scale","","",3,[[["f32"]],["rectf"]]],[11,"scale_xy","","",3,[[["vector2f"]],["rectf"]]],[11,"round","","Rounds all points to the nearest integer.",3,[[],["rectf"]]],[11,"round_out","","",3,[[],["rectf"]]],[11,"dilate","","",3,[[["vector2f"]],["rectf"]]],[11,"contract","","",3,[[["vector2f"]],["rectf"]]],[11,"to_i32","","",3,[[["self"]],["recti"]]],[11,"new","","",4,[[["vector2i"]],["recti"]]],[11,"from_points","","",4,[[["vector2i"]],["recti"]]],[11,"origin","","",4,[[["self"]],["vector2i"]]],[11,"size","","",4,[[["self"]],["vector2i"]]],[11,"origin_x","","",4,[[],["i32"]]],[11,"origin_y","","",4,[[],["i32"]]],[11,"width","","",4,[[],["i32"]]],[11,"height","","",4,[[],["i32"]]],[11,"upper_right","","",4,[[["self"]],["vector2i"]]],[11,"lower_left","","",4,[[["self"]],["vector2i"]]],[11,"lower_right","","",4,[[["self"]],["vector2i"]]],[11,"scale","","",4,[[["i32"]],["recti"]]],[11,"scale_xy","","",4,[[["vector2i"]],["recti"]]],[11,"min_x","","",4,[[],["i32"]]],[11,"min_y","","",4,[[],["i32"]]],[11,"max_x","","",4,[[],["i32"]]],[11,"max_y","","",4,[[],["i32"]]],[11,"intersects","","",4,[[["recti"]],["bool"]]],[11,"intersection","","",4,[[["recti"]],[["option",["recti"]],["recti"]]]],[11,"contains_point","","",4,[[["self"],["vector2i"]],["bool"]]],[11,"contract","","",4,[[["vector2i"]],["recti"]]],[11,"to_f32","","",4,[[["self"]],["rectf"]]],[0,"transform2d","pathfinder_geometry","2D affine transforms.",null,null],[3,"Matrix2x2F","pathfinder_geometry::transform2d","A 2x2 matrix, optimized with SIMD, in column-major order.",null,null],[12,"0","","",5,null],[3,"Transform2F","","An affine transform, optimized with SIMD.",null,null],[12,"matrix","","",6,null],[12,"vector","","",6,null],[11,"from_scale","","",5,[[["vector2f"]],["matrix2x2f"]]],[11,"from_rotation","","",5,[[["f32"]],["matrix2x2f"]]],[11,"from_rotation_vector","","",5,[[["unitvector"]],["matrix2x2f"]]],[11,"row_major","","",5,[[["f32"]],["matrix2x2f"]]],[11,"entrywise_mul","","",5,[[["self"],["matrix2x2f"]],["matrix2x2f"]]],[11,"adjugate","","",5,[[["self"]],["matrix2x2f"]]],[11,"det","","",5,[[["self"]],["f32"]]],[11,"inverse","","",5,[[["self"]],["matrix2x2f"]]],[11,"m11","","",5,[[["self"]],["f32"]]],[11,"m21","","",5,[[["self"]],["f32"]]],[11,"m12","","",5,[[["self"]],["f32"]]],[11,"m22","","",5,[[["self"]],["f32"]]],[11,"from_scale","","",6,[[["vector2f"]],["transform2f"]]],[11,"from_uniform_scale","","",6,[[["f32"]],["transform2f"]]],[11,"from_rotation","","",6,[[["f32"]],["transform2f"]]],[11,"from_rotation_vector","","",6,[[["unitvector"]],["transform2f"]]],[11,"from_translation","","",6,[[["vector2f"]],["transform2f"]]],[11,"from_scale_rotation_translation","","",6,[[["vector2f"],["f32"]],["transform2f"]]],[11,"row_major","","",6,[[["f32"]],["transform2f"]]],[11,"to_3d","","",6,[[["self"]],["transform4f"]]],[11,"is_identity","","",6,[[["self"]],["bool"]]],[11,"m11","","",6,[[["self"]],["f32"]]],[11,"m21","","",6,[[["self"]],["f32"]]],[11,"m12","","",6,[[["self"]],["f32"]]],[11,"m22","","",6,[[["self"]],["f32"]]],[11,"translate","","",6,[[["vector2f"],["self"]],["transform2f"]]],[11,"rotate","","",6,[[["f32"],["self"]],["transform2f"]]],[11,"scale","","",6,[[["vector2f"],["self"]],["transform2f"]]],[11,"uniform_scale","","",6,[[["f32"],["self"]],["transform2f"]]],[11,"translation","","Returns the translation part of this matrix.",6,[[["self"]],["vector2f"]]],[11,"rotation","","Returns the rotation angle of this matrix.",6,[[["self"]],["f32"]]],[11,"scale_factor","","Returns the scale factor of this matrix.",6,[[["self"]],["f32"]]],[11,"inverse","","",6,[[["self"]],["transform2f"]]],[0,"transform3d","pathfinder_geometry","3D transforms that can be applied to paths.",null,null],[3,"Transform4F","pathfinder_geometry::transform3d","An transform, optimized with SIMD.",null,null],[12,"c0","","",7,null],[12,"c1","","",7,null],[12,"c2","","",7,null],[12,"c3","","",7,null],[3,"Perspective","","",null,null],[12,"transform","","",8,null],[12,"window_size","","",8,null],[11,"row_major","","",7,[[["f32"]],["transform4f"]]],[11,"from_scale","","",7,[[["vector4f"]],["transform4f"]]],[11,"from_uniform_scale","","",7,[[["f32"]],["transform4f"]]],[11,"from_translation","","",7,[[["vector4f"]],["transform4f"]]],[11,"from_rotation","","",7,[[["f32"]],["transform4f"]]],[11,"from_rotation_quaternion","","Creates a rotation matrix from the given quaternion.",7,[[["f32x4"]],["transform4f"]]],[11,"from_ortho","","Just like `glOrtho()`.",7,[[["f32"]],["transform4f"]]],[11,"lerp","","Linearly interpolate between transforms",7,[[["f32"],["self"],["transform4f"]],["transform4f"]]],[11,"from_perspective","","Just like `gluPerspective()`.",7,[[["f32"]],["transform4f"]]],[11,"looking_at","","Just like `gluLookAt()`.",7,[[["vector3f"]],["transform4f"]]],[11,"from_submatrices","","",7,[[["matrix2x2f"]],["transform4f"]]],[11,"rotate","","",7,[[["f32"],["self"]],["transform4f"]]],[11,"scale","","",7,[[["self"],["vector4f"]],["transform4f"]]],[11,"uniform_scale","","",7,[[["f32"],["self"]],["transform4f"]]],[11,"translate","","",7,[[["self"],["vector4f"]],["transform4f"]]],[11,"upper_left","","",7,[[["self"]],["matrix2x2f"]]],[11,"upper_right","","",7,[[["self"]],["matrix2x2f"]]],[11,"lower_left","","",7,[[["self"]],["matrix2x2f"]]],[11,"lower_right","","",7,[[["self"]],["matrix2x2f"]]],[11,"inverse","","",7,[[["self"]],["transform4f"]]],[11,"approx_eq","","",7,[[["f32"],["self"],["transform4f"]],["bool"]]],[11,"as_ptr","","",7,[[["self"]]]],[11,"to_columns","","",7,[[["self"]]]],[11,"new","","",8,[[["vector2i"],["transform4f"]],["perspective"]]],[0,"unit_vector","pathfinder_geometry","A utility module that allows unit vectors to be treated…",null,null],[3,"UnitVector","pathfinder_geometry::unit_vector","",null,null],[12,"0","","",9,null],[11,"from_angle","","",9,[[["f32"]],["unitvector"]]],[11,"rotate_by","","Angle addition formula.",9,[[["self"],["unitvector"]],["unitvector"]]],[11,"rev_rotate_by","","Angle subtraction formula.",9,[[["self"],["unitvector"]],["unitvector"]]],[11,"halve_angle","","Half angle formula.",9,[[["self"]],["unitvector"]]],[0,"util","pathfinder_geometry","Various utilities.",null,null],[5,"approx_eq","pathfinder_geometry::util","Approximate equality.",null,[[["f32"]],["bool"]]],[5,"lerp","","Linear interpolation.",null,[[["f32"]],["f32"]]],[5,"clamp","","Clamping.",null,[[["f32"]],["f32"]]],[5,"alignup_i32","","Divides `a` by `b`, rounding up.",null,[[["i32"]],["i32"]]],[17,"EPSILON","","",null,null],[0,"vector","pathfinder_geometry","A SIMD-optimized point type.",null,null],[3,"Vector2F","pathfinder_geometry::vector","2D points with 32-bit floating point coordinates.",null,null],[12,"0","","",10,null],[3,"Vector2I","","2D points with 32-bit signed integer coordinates.",null,null],[12,"0","","",11,null],[3,"Vector3F","","3D points.",null,null],[12,"0","","",12,null],[3,"Vector4F","","3D homogeneous points.",null,null],[12,"0","","",13,null],[11,"new","","",10,[[["f32"]],["vector2f"]]],[11,"splat","","",10,[[["f32"]],["vector2f"]]],[11,"to_3d","","",10,[[],["vector3f"]]],[11,"to_4d","","",10,[[],["vector4f"]]],[11,"x","","",10,[[],["f32"]]],[11,"y","","",10,[[],["f32"]]],[11,"set_x","","",10,[[["f32"],["self"]]]],[11,"set_y","","",10,[[["f32"],["self"]]]],[11,"min","","",10,[[["vector2f"]],["vector2f"]]],[11,"max","","",10,[[["vector2f"]],["vector2f"]]],[11,"clamp","","",10,[[["vector2f"]],["vector2f"]]],[11,"det","","",10,[[["vector2f"]],["f32"]]],[11,"dot","","",10,[[["vector2f"]],["f32"]]],[11,"scale","","",10,[[["f32"]],["vector2f"]]],[11,"scale_xy","","",10,[[["vector2f"]],["vector2f"]]],[11,"floor","","",10,[[],["vector2f"]]],[11,"ceil","","",10,[[],["vector2f"]]],[11,"round","","Rounds both coordinates to the nearest integer.",10,[[],["vector2f"]]],[11,"square_length","","Treats this point as a vector and calculates its squared…",10,[[],["f32"]]],[11,"length","","Treats this point as a vector and calculates its length.",10,[[],["f32"]]],[11,"normalize","","Treats this point as a vector and normalizes it.",10,[[],["vector2f"]]],[11,"yx","","Swaps y and x.",10,[[],["vector2f"]]],[11,"projection_coefficient","","Returns the coefficient when the given vector `a` is…",10,[[["vector2f"]],["f32"]]],[11,"is_zero","","",10,[[],["bool"]]],[11,"lerp","","",10,[[["vector2f"],["f32"]],["vector2f"]]],[11,"to_i32","","",10,[[],["vector2i"]]],[11,"new","","",11,[[["i32"]],["vector2i"]]],[11,"splat","","",11,[[["i32"]],["vector2i"]]],[11,"x","","",11,[[],["i32"]]],[11,"y","","",11,[[],["i32"]]],[11,"set_x","","",11,[[["self"],["i32"]]]],[11,"set_y","","",11,[[["self"],["i32"]]]],[11,"min","","",11,[[["vector2i"]],["vector2i"]]],[11,"max","","",11,[[["vector2i"]],["vector2i"]]],[11,"scale","","",11,[[["i32"]],["vector2i"]]],[11,"scale_xy","","",11,[[["vector2i"]],["vector2i"]]],[11,"to_f32","","",11,[[],["vector2f"]]],[11,"new","","",12,[[["f32"]],["vector3f"]]],[11,"splat","","",12,[[["f32"]],["vector3f"]]],[11,"to_2d","","Truncates this vector to 2D.",12,[[],["vector2f"]]],[11,"to_4d","","Converts this vector to an equivalent 3D homogeneous one…",12,[[],["vector4f"]]],[11,"cross","","",12,[[["vector3f"]],["vector3f"]]],[11,"square_length","","",12,[[],["f32"]]],[11,"length","","",12,[[],["f32"]]],[11,"normalize","","",12,[[],["vector3f"]]],[11,"x","","",12,[[],["f32"]]],[11,"y","","",12,[[],["f32"]]],[11,"z","","",12,[[],["f32"]]],[11,"scale","","",12,[[["f32"]],["vector3f"]]],[11,"new","","",13,[[["f32"]],["vector4f"]]],[11,"splat","","",13,[[["f32"]],["vector4f"]]],[11,"to_2d","","",13,[[],["vector2f"]]],[11,"to_3d","","Performs perspective division to convert this vector to 3D.",13,[[],["vector3f"]]],[11,"x","","",13,[[],["f32"]]],[11,"y","","",13,[[],["f32"]]],[11,"z","","",13,[[],["f32"]]],[11,"w","","",13,[[],["f32"]]],[11,"scale","","",13,[[["f32"]],["vector4f"]]],[11,"set_x","","",13,[[["f32"],["self"]]]],[11,"set_y","","",13,[[["f32"],["self"]]]],[11,"set_z","","",13,[[["f32"],["self"]]]],[11,"set_w","","",13,[[["f32"],["self"]]]],[11,"approx_eq","","",13,[[["f32"],["vector4f"]],["bool"]]],[11,"is_zero","","Checks to see whether this homogeneous coordinate equals…",13,[[],["bool"]]],[11,"lerp","","",13,[[["f32"],["vector4f"]],["vector4f"]]],[11,"from","pathfinder_geometry::line_segment","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","pathfinder_geometry::rect","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","pathfinder_geometry::transform2d","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","pathfinder_geometry::transform3d","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","pathfinder_geometry::unit_vector","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","pathfinder_geometry::vector","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"clone","pathfinder_geometry::line_segment","",0,[[["self"]],["linesegment2f"]]],[11,"clone","","",1,[[["self"]],["linesegmentu4"]]],[11,"clone","","",2,[[["self"]],["linesegmentu8"]]],[11,"clone","pathfinder_geometry::rect","",3,[[["self"]],["rectf"]]],[11,"clone","","",4,[[["self"]],["recti"]]],[11,"clone","pathfinder_geometry::transform2d","",5,[[["self"]],["matrix2x2f"]]],[11,"clone","","",6,[[["self"]],["transform2f"]]],[11,"clone","pathfinder_geometry::transform3d","",7,[[["self"]],["transform4f"]]],[11,"clone","","",8,[[["self"]],["perspective"]]],[11,"clone","pathfinder_geometry::unit_vector","",9,[[["self"]],["unitvector"]]],[11,"clone","pathfinder_geometry::vector","",10,[[["self"]],["vector2f"]]],[11,"clone","","",11,[[["self"]],["vector2i"]]],[11,"clone","","",12,[[["self"]],["vector3f"]]],[11,"clone","","",13,[[["self"]],["vector4f"]]],[11,"default","pathfinder_geometry::line_segment","",0,[[],["linesegment2f"]]],[11,"default","","",1,[[],["linesegmentu4"]]],[11,"default","","",2,[[],["linesegmentu8"]]],[11,"default","pathfinder_geometry::rect","",3,[[],["rectf"]]],[11,"default","","",4,[[],["recti"]]],[11,"default","pathfinder_geometry::transform2d","",5,[[],["matrix2x2f"]]],[11,"default","","",6,[[],["transform2f"]]],[11,"default","pathfinder_geometry::transform3d","",7,[[],["transform4f"]]],[11,"default","pathfinder_geometry::vector","",10,[[],["vector2f"]]],[11,"default","","",11,[[],["vector2i"]]],[11,"default","","",12,[[],["vector3f"]]],[11,"default","","",13,[[],["vector4f"]]],[11,"eq","pathfinder_geometry::line_segment","",0,[[["self"],["linesegment2f"]],["bool"]]],[11,"ne","","",0,[[["self"],["linesegment2f"]],["bool"]]],[11,"eq","pathfinder_geometry::rect","",3,[[["rectf"],["self"]],["bool"]]],[11,"ne","","",3,[[["rectf"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["recti"]],["bool"]]],[11,"ne","","",4,[[["self"],["recti"]],["bool"]]],[11,"eq","pathfinder_geometry::transform2d","",5,[[["self"],["matrix2x2f"]],["bool"]]],[11,"ne","","",5,[[["self"],["matrix2x2f"]],["bool"]]],[11,"eq","","",6,[[["transform2f"],["self"]],["bool"]]],[11,"ne","","",6,[[["transform2f"],["self"]],["bool"]]],[11,"eq","pathfinder_geometry::transform3d","",7,[[["self"],["transform4f"]],["bool"]]],[11,"ne","","",7,[[["self"],["transform4f"]],["bool"]]],[11,"eq","pathfinder_geometry::vector","",10,[[["vector2f"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["vector2i"]],["bool"]]],[11,"eq","","",12,[[["self"],["vector3f"]],["bool"]]],[11,"ne","","",12,[[["self"],["vector3f"]],["bool"]]],[11,"eq","","",13,[[["vector4f"],["self"]],["bool"]]],[11,"ne","","",13,[[["vector4f"],["self"]],["bool"]]],[11,"fmt","pathfinder_geometry::line_segment","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_geometry::rect","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_geometry::transform2d","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_geometry::transform3d","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_geometry::unit_vector","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_geometry::vector","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"div","","",10,[[["vector2f"]],["vector2f"]]],[11,"sub","pathfinder_geometry::line_segment","",0,[[["vector2f"]],["linesegment2f"]]],[11,"sub","pathfinder_geometry::transform2d","",5,[[["matrix2x2f"]],["matrix2x2f"]]],[11,"sub","pathfinder_geometry::vector","",10,[[["vector2f"]],["vector2f"]]],[11,"sub","","",11,[[["vector2i"]],["vector2i"]]],[11,"sub","","",12,[[["vector3f"]],["vector3f"]]],[11,"sub","","",13,[[["vector4f"]],["vector4f"]]],[11,"add","pathfinder_geometry::line_segment","",0,[[["vector2f"]],["linesegment2f"]]],[11,"add","pathfinder_geometry::transform2d","",5,[[["matrix2x2f"]],["matrix2x2f"]]],[11,"add","pathfinder_geometry::vector","",10,[[["vector2f"]],["vector2f"]]],[11,"add","","",11,[[["vector2i"]],["vector2i"]]],[11,"add","","",12,[[["vector3f"]],["vector3f"]]],[11,"add","","",13,[[["vector4f"]],["vector4f"]]],[11,"mul","pathfinder_geometry::transform2d","",5,[[["matrix2x2f"]],["matrix2x2f"]]],[11,"mul","","",5,[[["vector2f"]],["vector2f"]]],[11,"mul","","",6,[[["transform2f"]],["transform2f"]]],[11,"mul","","",6,[[["vector2f"]],["vector2f"]]],[11,"mul","","",6,[[["linesegment2f"]],["linesegment2f"]]],[11,"mul","","",6,[[["rectf"]],["rectf"]]],[11,"mul","pathfinder_geometry::transform3d","",7,[[["transform4f"]],["transform4f"]]],[11,"mul","","",7,[[["vector4f"]],["vector4f"]]],[11,"mul","","",8,[[["transform4f"]],["perspective"]]],[11,"mul","","",8,[[["vector2f"]],["vector2f"]]],[11,"mul","","",8,[[["rectf"]],["rectf"]]],[11,"mul","pathfinder_geometry::vector","",10,[[["vector2f"]],["vector2f"]]],[11,"mul","","",13,[[["vector4f"]],["vector4f"]]],[11,"neg","pathfinder_geometry::transform2d","",5,[[],["matrix2x2f"]]],[11,"neg","pathfinder_geometry::vector","",10,[[],["vector2f"]]],[11,"neg","","",11,[[],["vector2i"]]],[11,"neg","","",12,[[],["vector3f"]]],[11,"neg","","NB: This does not negate w, because that is rarely what…",13,[[],["vector4f"]]],[11,"add_assign","","",11,[[["self"],["vector2i"]]]],[11,"add_assign","","",12,[[["self"],["vector3f"]]]],[11,"add_assign","","",13,[[["self"],["vector4f"]]]],[11,"mul_assign","pathfinder_geometry::transform2d","",6,[[["self"],["transform2f"]]]],[11,"mul_assign","pathfinder_geometry::transform3d","",7,[[["self"],["transform4f"]]]],[11,"hash","pathfinder_geometry::vector","",11,[[["self"],["h"]]]]],"p":[[3,"LineSegment2F"],[3,"LineSegmentU4"],[3,"LineSegmentU8"],[3,"RectF"],[3,"RectI"],[3,"Matrix2x2F"],[3,"Transform2F"],[3,"Transform4F"],[3,"Perspective"],[3,"UnitVector"],[3,"Vector2F"],[3,"Vector2I"],[3,"Vector3F"],[3,"Vector4F"]]};
searchIndex["pathfinder_simd"] = {"doc":"A minimal SIMD abstraction, usable outside of Pathfinder.","i":[[0,"scalar","pathfinder_simd","",null,null],[3,"F32x2","pathfinder_simd::scalar","",null,null],[12,"0","","",0,null],[3,"F32x4","","",null,null],[12,"0","","",1,null],[3,"I32x2","","",null,null],[3,"I32x4","","",null,null],[3,"U32x2","","",null,null],[12,"0","","",2,null],[3,"U32x4","","",null,null],[12,"0","","",3,null],[11,"xxxx","","Constructs a new vector from the first, first, first, and…",1,[[],["f32x4"]]],[11,"yxxx","","Constructs a new vector from the second, first, first, and…",1,[[],["f32x4"]]],[11,"zxxx","","Constructs a new vector from the third, first, first, and…",1,[[],["f32x4"]]],[11,"wxxx","","Constructs a new vector from the fourth, first, first, and…",1,[[],["f32x4"]]],[11,"xyxx","","Constructs a new vector from the first, second, first, and…",1,[[],["f32x4"]]],[11,"yyxx","","Constructs a new vector from the second, second, first,…",1,[[],["f32x4"]]],[11,"zyxx","","Constructs a new vector from the third, second, first, and…",1,[[],["f32x4"]]],[11,"wyxx","","Constructs a new vector from the fourth, second, first,…",1,[[],["f32x4"]]],[11,"xzxx","","Constructs a new vector from the first, third, first, and…",1,[[],["f32x4"]]],[11,"yzxx","","Constructs a new vector from the second, third, first, and…",1,[[],["f32x4"]]],[11,"zzxx","","Constructs a new vector from the third, third, first, and…",1,[[],["f32x4"]]],[11,"wzxx","","Constructs a new vector from the fourth, third, first, and…",1,[[],["f32x4"]]],[11,"xwxx","","Constructs a new vector from the first, fourth, first, and…",1,[[],["f32x4"]]],[11,"ywxx","","Constructs a new vector from the second, fourth, first,…",1,[[],["f32x4"]]],[11,"zwxx","","Constructs a new vector from the third, fourth, first, and…",1,[[],["f32x4"]]],[11,"wwxx","","Constructs a new vector from the fourth, fourth, first,…",1,[[],["f32x4"]]],[11,"xxyx","","Constructs a new vector from the first, first, second, and…",1,[[],["f32x4"]]],[11,"yxyx","","Constructs a new vector from the second, first, second,…",1,[[],["f32x4"]]],[11,"zxyx","","Constructs a new vector from the third, first, second, and…",1,[[],["f32x4"]]],[11,"wxyx","","Constructs a new vector from the fourth, first, second,…",1,[[],["f32x4"]]],[11,"xyyx","","Constructs a new vector from the first, second, second,…",1,[[],["f32x4"]]],[11,"yyyx","","Constructs a new vector from the second, second, second,…",1,[[],["f32x4"]]],[11,"zyyx","","Constructs a new vector from the third, second, second,…",1,[[],["f32x4"]]],[11,"wyyx","","Constructs a new vector from the fourth, second, second,…",1,[[],["f32x4"]]],[11,"xzyx","","Constructs a new vector from the first, third, second, and…",1,[[],["f32x4"]]],[11,"yzyx","","Constructs a new vector from the second, third, second,…",1,[[],["f32x4"]]],[11,"zzyx","","Constructs a new vector from the third, third, second, and…",1,[[],["f32x4"]]],[11,"wzyx","","Constructs a new vector from the fourth, third, second,…",1,[[],["f32x4"]]],[11,"xwyx","","Constructs a new vector from the first, fourth, second,…",1,[[],["f32x4"]]],[11,"ywyx","","Constructs a new vector from the second, fourth, second,…",1,[[],["f32x4"]]],[11,"zwyx","","Constructs a new vector from the third, fourth, second,…",1,[[],["f32x4"]]],[11,"wwyx","","Constructs a new vector from the fourth, fourth, second,…",1,[[],["f32x4"]]],[11,"xxzx","","Constructs a new vector from the first, first, third, and…",1,[[],["f32x4"]]],[11,"yxzx","","Constructs a new vector from the second, first, third, and…",1,[[],["f32x4"]]],[11,"zxzx","","Constructs a new vector from the third, first, third, and…",1,[[],["f32x4"]]],[11,"wxzx","","Constructs a new vector from the fourth, first, third, and…",1,[[],["f32x4"]]],[11,"xyzx","","Constructs a new vector from the first, second, third, and…",1,[[],["f32x4"]]],[11,"yyzx","","Constructs a new vector from the second, second, third,…",1,[[],["f32x4"]]],[11,"zyzx","","Constructs a new vector from the third, second, third, and…",1,[[],["f32x4"]]],[11,"wyzx","","Constructs a new vector from the fourth, second, third,…",1,[[],["f32x4"]]],[11,"xzzx","","Constructs a new vector from the first, third, third, and…",1,[[],["f32x4"]]],[11,"yzzx","","Constructs a new vector from the second, third, third, and…",1,[[],["f32x4"]]],[11,"zzzx","","Constructs a new vector from the third, third, third, and…",1,[[],["f32x4"]]],[11,"wzzx","","Constructs a new vector from the fourth, third, third, and…",1,[[],["f32x4"]]],[11,"xwzx","","Constructs a new vector from the first, fourth, third, and…",1,[[],["f32x4"]]],[11,"ywzx","","Constructs a new vector from the second, fourth, third,…",1,[[],["f32x4"]]],[11,"zwzx","","Constructs a new vector from the third, fourth, third, and…",1,[[],["f32x4"]]],[11,"wwzx","","Constructs a new vector from the fourth, fourth, third,…",1,[[],["f32x4"]]],[11,"xxwx","","Constructs a new vector from the first, first, fourth, and…",1,[[],["f32x4"]]],[11,"yxwx","","Constructs a new vector from the second, first, fourth,…",1,[[],["f32x4"]]],[11,"zxwx","","Constructs a new vector from the third, first, fourth, and…",1,[[],["f32x4"]]],[11,"wxwx","","Constructs a new vector from the fourth, first, fourth,…",1,[[],["f32x4"]]],[11,"xywx","","Constructs a new vector from the first, second, fourth,…",1,[[],["f32x4"]]],[11,"yywx","","Constructs a new vector from the second, second, fourth,…",1,[[],["f32x4"]]],[11,"zywx","","Constructs a new vector from the third, second, fourth,…",1,[[],["f32x4"]]],[11,"wywx","","Constructs a new vector from the fourth, second, fourth,…",1,[[],["f32x4"]]],[11,"xzwx","","Constructs a new vector from the first, third, fourth, and…",1,[[],["f32x4"]]],[11,"yzwx","","Constructs a new vector from the second, third, fourth,…",1,[[],["f32x4"]]],[11,"zzwx","","Constructs a new vector from the third, third, fourth, and…",1,[[],["f32x4"]]],[11,"wzwx","","Constructs a new vector from the fourth, third, fourth,…",1,[[],["f32x4"]]],[11,"xwwx","","Constructs a new vector from the first, fourth, fourth,…",1,[[],["f32x4"]]],[11,"ywwx","","Constructs a new vector from the second, fourth, fourth,…",1,[[],["f32x4"]]],[11,"zwwx","","Constructs a new vector from the third, fourth, fourth,…",1,[[],["f32x4"]]],[11,"wwwx","","Constructs a new vector from the fourth, fourth, fourth,…",1,[[],["f32x4"]]],[11,"xxxy","","Constructs a new vector from the first, first, first, and…",1,[[],["f32x4"]]],[11,"yxxy","","Constructs a new vector from the second, first, first, and…",1,[[],["f32x4"]]],[11,"zxxy","","Constructs a new vector from the third, first, first, and…",1,[[],["f32x4"]]],[11,"wxxy","","Constructs a new vector from the fourth, first, first, and…",1,[[],["f32x4"]]],[11,"xyxy","","Constructs a new vector from the first, second, first, and…",1,[[],["f32x4"]]],[11,"yyxy","","Constructs a new vector from the second, second, first,…",1,[[],["f32x4"]]],[11,"zyxy","","Constructs a new vector from the third, second, first, and…",1,[[],["f32x4"]]],[11,"wyxy","","Constructs a new vector from the fourth, second, first,…",1,[[],["f32x4"]]],[11,"xzxy","","Constructs a new vector from the first, third, first, and…",1,[[],["f32x4"]]],[11,"yzxy","","Constructs a new vector from the second, third, first, and…",1,[[],["f32x4"]]],[11,"zzxy","","Constructs a new vector from the third, third, first, and…",1,[[],["f32x4"]]],[11,"wzxy","","Constructs a new vector from the fourth, third, first, and…",1,[[],["f32x4"]]],[11,"xwxy","","Constructs a new vector from the first, fourth, first, and…",1,[[],["f32x4"]]],[11,"ywxy","","Constructs a new vector from the second, fourth, first,…",1,[[],["f32x4"]]],[11,"zwxy","","Constructs a new vector from the third, fourth, first, and…",1,[[],["f32x4"]]],[11,"wwxy","","Constructs a new vector from the fourth, fourth, first,…",1,[[],["f32x4"]]],[11,"xxyy","","Constructs a new vector from the first, first, second, and…",1,[[],["f32x4"]]],[11,"yxyy","","Constructs a new vector from the second, first, second,…",1,[[],["f32x4"]]],[11,"zxyy","","Constructs a new vector from the third, first, second, and…",1,[[],["f32x4"]]],[11,"wxyy","","Constructs a new vector from the fourth, first, second,…",1,[[],["f32x4"]]],[11,"xyyy","","Constructs a new vector from the first, second, second,…",1,[[],["f32x4"]]],[11,"yyyy","","Constructs a new vector from the second, second, second,…",1,[[],["f32x4"]]],[11,"zyyy","","Constructs a new vector from the third, second, second,…",1,[[],["f32x4"]]],[11,"wyyy","","Constructs a new vector from the fourth, second, second,…",1,[[],["f32x4"]]],[11,"xzyy","","Constructs a new vector from the first, third, second, and…",1,[[],["f32x4"]]],[11,"yzyy","","Constructs a new vector from the second, third, second,…",1,[[],["f32x4"]]],[11,"zzyy","","Constructs a new vector from the third, third, second, and…",1,[[],["f32x4"]]],[11,"wzyy","","Constructs a new vector from the fourth, third, second,…",1,[[],["f32x4"]]],[11,"xwyy","","Constructs a new vector from the first, fourth, second,…",1,[[],["f32x4"]]],[11,"ywyy","","Constructs a new vector from the second, fourth, second,…",1,[[],["f32x4"]]],[11,"zwyy","","Constructs a new vector from the third, fourth, second,…",1,[[],["f32x4"]]],[11,"wwyy","","Constructs a new vector from the fourth, fourth, second,…",1,[[],["f32x4"]]],[11,"xxzy","","Constructs a new vector from the first, first, third, and…",1,[[],["f32x4"]]],[11,"yxzy","","Constructs a new vector from the second, first, third, and…",1,[[],["f32x4"]]],[11,"zxzy","","Constructs a new vector from the third, first, third, and…",1,[[],["f32x4"]]],[11,"wxzy","","Constructs a new vector from the fourth, first, third, and…",1,[[],["f32x4"]]],[11,"xyzy","","Constructs a new vector from the first, second, third, and…",1,[[],["f32x4"]]],[11,"yyzy","","Constructs a new vector from the second, second, third,…",1,[[],["f32x4"]]],[11,"zyzy","","Constructs a new vector from the third, second, third, and…",1,[[],["f32x4"]]],[11,"wyzy","","Constructs a new vector from the fourth, second, third,…",1,[[],["f32x4"]]],[11,"xzzy","","Constructs a new vector from the first, third, third, and…",1,[[],["f32x4"]]],[11,"yzzy","","Constructs a new vector from the second, third, third, and…",1,[[],["f32x4"]]],[11,"zzzy","","Constructs a new vector from the third, third, third, and…",1,[[],["f32x4"]]],[11,"wzzy","","Constructs a new vector from the fourth, third, third, and…",1,[[],["f32x4"]]],[11,"xwzy","","Constructs a new vector from the first, fourth, third, and…",1,[[],["f32x4"]]],[11,"ywzy","","Constructs a new vector from the second, fourth, third,…",1,[[],["f32x4"]]],[11,"zwzy","","Constructs a new vector from the third, fourth, third, and…",1,[[],["f32x4"]]],[11,"wwzy","","Constructs a new vector from the fourth, fourth, third,…",1,[[],["f32x4"]]],[11,"xxwy","","Constructs a new vector from the first, first, fourth, and…",1,[[],["f32x4"]]],[11,"yxwy","","Constructs a new vector from the second, first, fourth,…",1,[[],["f32x4"]]],[11,"zxwy","","Constructs a new vector from the third, first, fourth, and…",1,[[],["f32x4"]]],[11,"wxwy","","Constructs a new vector from the fourth, first, fourth,…",1,[[],["f32x4"]]],[11,"xywy","","Constructs a new vector from the first, second, fourth,…",1,[[],["f32x4"]]],[11,"yywy","","Constructs a new vector from the second, second, fourth,…",1,[[],["f32x4"]]],[11,"zywy","","Constructs a new vector from the third, second, fourth,…",1,[[],["f32x4"]]],[11,"wywy","","Constructs a new vector from the fourth, second, fourth,…",1,[[],["f32x4"]]],[11,"xzwy","","Constructs a new vector from the first, third, fourth, and…",1,[[],["f32x4"]]],[11,"yzwy","","Constructs a new vector from the second, third, fourth,…",1,[[],["f32x4"]]],[11,"zzwy","","Constructs a new vector from the third, third, fourth, and…",1,[[],["f32x4"]]],[11,"wzwy","","Constructs a new vector from the fourth, third, fourth,…",1,[[],["f32x4"]]],[11,"xwwy","","Constructs a new vector from the first, fourth, fourth,…",1,[[],["f32x4"]]],[11,"ywwy","","Constructs a new vector from the second, fourth, fourth,…",1,[[],["f32x4"]]],[11,"zwwy","","Constructs a new vector from the third, fourth, fourth,…",1,[[],["f32x4"]]],[11,"wwwy","","Constructs a new vector from the fourth, fourth, fourth,…",1,[[],["f32x4"]]],[11,"xxxz","","Constructs a new vector from the first, first, first, and…",1,[[],["f32x4"]]],[11,"yxxz","","Constructs a new vector from the second, first, first, and…",1,[[],["f32x4"]]],[11,"zxxz","","Constructs a new vector from the third, first, first, and…",1,[[],["f32x4"]]],[11,"wxxz","","Constructs a new vector from the fourth, first, first, and…",1,[[],["f32x4"]]],[11,"xyxz","","Constructs a new vector from the first, second, first, and…",1,[[],["f32x4"]]],[11,"yyxz","","Constructs a new vector from the second, second, first,…",1,[[],["f32x4"]]],[11,"zyxz","","Constructs a new vector from the third, second, first, and…",1,[[],["f32x4"]]],[11,"wyxz","","Constructs a new vector from the fourth, second, first,…",1,[[],["f32x4"]]],[11,"xzxz","","Constructs a new vector from the first, third, first, and…",1,[[],["f32x4"]]],[11,"yzxz","","Constructs a new vector from the second, third, first, and…",1,[[],["f32x4"]]],[11,"zzxz","","Constructs a new vector from the third, third, first, and…",1,[[],["f32x4"]]],[11,"wzxz","","Constructs a new vector from the fourth, third, first, and…",1,[[],["f32x4"]]],[11,"xwxz","","Constructs a new vector from the first, fourth, first, and…",1,[[],["f32x4"]]],[11,"ywxz","","Constructs a new vector from the second, fourth, first,…",1,[[],["f32x4"]]],[11,"zwxz","","Constructs a new vector from the third, fourth, first, and…",1,[[],["f32x4"]]],[11,"wwxz","","Constructs a new vector from the fourth, fourth, first,…",1,[[],["f32x4"]]],[11,"xxyz","","Constructs a new vector from the first, first, second, and…",1,[[],["f32x4"]]],[11,"yxyz","","Constructs a new vector from the second, first, second,…",1,[[],["f32x4"]]],[11,"zxyz","","Constructs a new vector from the third, first, second, and…",1,[[],["f32x4"]]],[11,"wxyz","","Constructs a new vector from the fourth, first, second,…",1,[[],["f32x4"]]],[11,"xyyz","","Constructs a new vector from the first, second, second,…",1,[[],["f32x4"]]],[11,"yyyz","","Constructs a new vector from the second, second, second,…",1,[[],["f32x4"]]],[11,"zyyz","","Constructs a new vector from the third, second, second,…",1,[[],["f32x4"]]],[11,"wyyz","","Constructs a new vector from the fourth, second, second,…",1,[[],["f32x4"]]],[11,"xzyz","","Constructs a new vector from the first, third, second, and…",1,[[],["f32x4"]]],[11,"yzyz","","Constructs a new vector from the second, third, second,…",1,[[],["f32x4"]]],[11,"zzyz","","Constructs a new vector from the third, third, second, and…",1,[[],["f32x4"]]],[11,"wzyz","","Constructs a new vector from the fourth, third, second,…",1,[[],["f32x4"]]],[11,"xwyz","","Constructs a new vector from the first, fourth, second,…",1,[[],["f32x4"]]],[11,"ywyz","","Constructs a new vector from the second, fourth, second,…",1,[[],["f32x4"]]],[11,"zwyz","","Constructs a new vector from the third, fourth, second,…",1,[[],["f32x4"]]],[11,"wwyz","","Constructs a new vector from the fourth, fourth, second,…",1,[[],["f32x4"]]],[11,"xxzz","","Constructs a new vector from the first, first, third, and…",1,[[],["f32x4"]]],[11,"yxzz","","Constructs a new vector from the second, first, third, and…",1,[[],["f32x4"]]],[11,"zxzz","","Constructs a new vector from the third, first, third, and…",1,[[],["f32x4"]]],[11,"wxzz","","Constructs a new vector from the fourth, first, third, and…",1,[[],["f32x4"]]],[11,"xyzz","","Constructs a new vector from the first, second, third, and…",1,[[],["f32x4"]]],[11,"yyzz","","Constructs a new vector from the second, second, third,…",1,[[],["f32x4"]]],[11,"zyzz","","Constructs a new vector from the third, second, third, and…",1,[[],["f32x4"]]],[11,"wyzz","","Constructs a new vector from the fourth, second, third,…",1,[[],["f32x4"]]],[11,"xzzz","","Constructs a new vector from the first, third, third, and…",1,[[],["f32x4"]]],[11,"yzzz","","Constructs a new vector from the second, third, third, and…",1,[[],["f32x4"]]],[11,"zzzz","","Constructs a new vector from the third, third, third, and…",1,[[],["f32x4"]]],[11,"wzzz","","Constructs a new vector from the fourth, third, third, and…",1,[[],["f32x4"]]],[11,"xwzz","","Constructs a new vector from the first, fourth, third, and…",1,[[],["f32x4"]]],[11,"ywzz","","Constructs a new vector from the second, fourth, third,…",1,[[],["f32x4"]]],[11,"zwzz","","Constructs a new vector from the third, fourth, third, and…",1,[[],["f32x4"]]],[11,"wwzz","","Constructs a new vector from the fourth, fourth, third,…",1,[[],["f32x4"]]],[11,"xxwz","","Constructs a new vector from the first, first, fourth, and…",1,[[],["f32x4"]]],[11,"yxwz","","Constructs a new vector from the second, first, fourth,…",1,[[],["f32x4"]]],[11,"zxwz","","Constructs a new vector from the third, first, fourth, and…",1,[[],["f32x4"]]],[11,"wxwz","","Constructs a new vector from the fourth, first, fourth,…",1,[[],["f32x4"]]],[11,"xywz","","Constructs a new vector from the first, second, fourth,…",1,[[],["f32x4"]]],[11,"yywz","","Constructs a new vector from the second, second, fourth,…",1,[[],["f32x4"]]],[11,"zywz","","Constructs a new vector from the third, second, fourth,…",1,[[],["f32x4"]]],[11,"wywz","","Constructs a new vector from the fourth, second, fourth,…",1,[[],["f32x4"]]],[11,"xzwz","","Constructs a new vector from the first, third, fourth, and…",1,[[],["f32x4"]]],[11,"yzwz","","Constructs a new vector from the second, third, fourth,…",1,[[],["f32x4"]]],[11,"zzwz","","Constructs a new vector from the third, third, fourth, and…",1,[[],["f32x4"]]],[11,"wzwz","","Constructs a new vector from the fourth, third, fourth,…",1,[[],["f32x4"]]],[11,"xwwz","","Constructs a new vector from the first, fourth, fourth,…",1,[[],["f32x4"]]],[11,"ywwz","","Constructs a new vector from the second, fourth, fourth,…",1,[[],["f32x4"]]],[11,"zwwz","","Constructs a new vector from the third, fourth, fourth,…",1,[[],["f32x4"]]],[11,"wwwz","","Constructs a new vector from the fourth, fourth, fourth,…",1,[[],["f32x4"]]],[11,"xxxw","","Constructs a new vector from the first, first, first, and…",1,[[],["f32x4"]]],[11,"yxxw","","Constructs a new vector from the second, first, first, and…",1,[[],["f32x4"]]],[11,"zxxw","","Constructs a new vector from the third, first, first, and…",1,[[],["f32x4"]]],[11,"wxxw","","Constructs a new vector from the fourth, first, first, and…",1,[[],["f32x4"]]],[11,"xyxw","","Constructs a new vector from the first, second, first, and…",1,[[],["f32x4"]]],[11,"yyxw","","Constructs a new vector from the second, second, first,…",1,[[],["f32x4"]]],[11,"zyxw","","Constructs a new vector from the third, second, first, and…",1,[[],["f32x4"]]],[11,"wyxw","","Constructs a new vector from the fourth, second, first,…",1,[[],["f32x4"]]],[11,"xzxw","","Constructs a new vector from the first, third, first, and…",1,[[],["f32x4"]]],[11,"yzxw","","Constructs a new vector from the second, third, first, and…",1,[[],["f32x4"]]],[11,"zzxw","","Constructs a new vector from the third, third, first, and…",1,[[],["f32x4"]]],[11,"wzxw","","Constructs a new vector from the fourth, third, first, and…",1,[[],["f32x4"]]],[11,"xwxw","","Constructs a new vector from the first, fourth, first, and…",1,[[],["f32x4"]]],[11,"ywxw","","Constructs a new vector from the second, fourth, first,…",1,[[],["f32x4"]]],[11,"zwxw","","Constructs a new vector from the third, fourth, first, and…",1,[[],["f32x4"]]],[11,"wwxw","","Constructs a new vector from the fourth, fourth, first,…",1,[[],["f32x4"]]],[11,"xxyw","","Constructs a new vector from the first, first, second, and…",1,[[],["f32x4"]]],[11,"yxyw","","Constructs a new vector from the second, first, second,…",1,[[],["f32x4"]]],[11,"zxyw","","Constructs a new vector from the third, first, second, and…",1,[[],["f32x4"]]],[11,"wxyw","","Constructs a new vector from the fourth, first, second,…",1,[[],["f32x4"]]],[11,"xyyw","","Constructs a new vector from the first, second, second,…",1,[[],["f32x4"]]],[11,"yyyw","","Constructs a new vector from the second, second, second,…",1,[[],["f32x4"]]],[11,"zyyw","","Constructs a new vector from the third, second, second,…",1,[[],["f32x4"]]],[11,"wyyw","","Constructs a new vector from the fourth, second, second,…",1,[[],["f32x4"]]],[11,"xzyw","","Constructs a new vector from the first, third, second, and…",1,[[],["f32x4"]]],[11,"yzyw","","Constructs a new vector from the second, third, second,…",1,[[],["f32x4"]]],[11,"zzyw","","Constructs a new vector from the third, third, second, and…",1,[[],["f32x4"]]],[11,"wzyw","","Constructs a new vector from the fourth, third, second,…",1,[[],["f32x4"]]],[11,"xwyw","","Constructs a new vector from the first, fourth, second,…",1,[[],["f32x4"]]],[11,"ywyw","","Constructs a new vector from the second, fourth, second,…",1,[[],["f32x4"]]],[11,"zwyw","","Constructs a new vector from the third, fourth, second,…",1,[[],["f32x4"]]],[11,"wwyw","","Constructs a new vector from the fourth, fourth, second,…",1,[[],["f32x4"]]],[11,"xxzw","","Constructs a new vector from the first, first, third, and…",1,[[],["f32x4"]]],[11,"yxzw","","Constructs a new vector from the second, first, third, and…",1,[[],["f32x4"]]],[11,"zxzw","","Constructs a new vector from the third, first, third, and…",1,[[],["f32x4"]]],[11,"wxzw","","Constructs a new vector from the fourth, first, third, and…",1,[[],["f32x4"]]],[11,"xyzw","","Constructs a new vector from the first, second, third, and…",1,[[],["f32x4"]]],[11,"yyzw","","Constructs a new vector from the second, second, third,…",1,[[],["f32x4"]]],[11,"zyzw","","Constructs a new vector from the third, second, third, and…",1,[[],["f32x4"]]],[11,"wyzw","","Constructs a new vector from the fourth, second, third,…",1,[[],["f32x4"]]],[11,"xzzw","","Constructs a new vector from the first, third, third, and…",1,[[],["f32x4"]]],[11,"yzzw","","Constructs a new vector from the second, third, third, and…",1,[[],["f32x4"]]],[11,"zzzw","","Constructs a new vector from the third, third, third, and…",1,[[],["f32x4"]]],[11,"wzzw","","Constructs a new vector from the fourth, third, third, and…",1,[[],["f32x4"]]],[11,"xwzw","","Constructs a new vector from the first, fourth, third, and…",1,[[],["f32x4"]]],[11,"ywzw","","Constructs a new vector from the second, fourth, third,…",1,[[],["f32x4"]]],[11,"zwzw","","Constructs a new vector from the third, fourth, third, and…",1,[[],["f32x4"]]],[11,"wwzw","","Constructs a new vector from the fourth, fourth, third,…",1,[[],["f32x4"]]],[11,"xxww","","Constructs a new vector from the first, first, fourth, and…",1,[[],["f32x4"]]],[11,"yxww","","Constructs a new vector from the second, first, fourth,…",1,[[],["f32x4"]]],[11,"zxww","","Constructs a new vector from the third, first, fourth, and…",1,[[],["f32x4"]]],[11,"wxww","","Constructs a new vector from the fourth, first, fourth,…",1,[[],["f32x4"]]],[11,"xyww","","Constructs a new vector from the first, second, fourth,…",1,[[],["f32x4"]]],[11,"yyww","","Constructs a new vector from the second, second, fourth,…",1,[[],["f32x4"]]],[11,"zyww","","Constructs a new vector from the third, second, fourth,…",1,[[],["f32x4"]]],[11,"wyww","","Constructs a new vector from the fourth, second, fourth,…",1,[[],["f32x4"]]],[11,"xzww","","Constructs a new vector from the first, third, fourth, and…",1,[[],["f32x4"]]],[11,"yzww","","Constructs a new vector from the second, third, fourth,…",1,[[],["f32x4"]]],[11,"zzww","","Constructs a new vector from the third, third, fourth, and…",1,[[],["f32x4"]]],[11,"wzww","","Constructs a new vector from the fourth, third, fourth,…",1,[[],["f32x4"]]],[11,"xwww","","Constructs a new vector from the first, fourth, fourth,…",1,[[],["f32x4"]]],[11,"ywww","","Constructs a new vector from the second, fourth, fourth,…",1,[[],["f32x4"]]],[11,"zwww","","Constructs a new vector from the third, fourth, fourth,…",1,[[],["f32x4"]]],[11,"wwww","","Constructs a new vector from the fourth, fourth, fourth,…",1,[[],["f32x4"]]],[11,"xxxx","","Constructs a new vector from the first, first, first, and…",4,[[],["i32x4"]]],[11,"yxxx","","Constructs a new vector from the second, first, first, and…",4,[[],["i32x4"]]],[11,"zxxx","","Constructs a new vector from the third, first, first, and…",4,[[],["i32x4"]]],[11,"wxxx","","Constructs a new vector from the fourth, first, first, and…",4,[[],["i32x4"]]],[11,"xyxx","","Constructs a new vector from the first, second, first, and…",4,[[],["i32x4"]]],[11,"yyxx","","Constructs a new vector from the second, second, first,…",4,[[],["i32x4"]]],[11,"zyxx","","Constructs a new vector from the third, second, first, and…",4,[[],["i32x4"]]],[11,"wyxx","","Constructs a new vector from the fourth, second, first,…",4,[[],["i32x4"]]],[11,"xzxx","","Constructs a new vector from the first, third, first, and…",4,[[],["i32x4"]]],[11,"yzxx","","Constructs a new vector from the second, third, first, and…",4,[[],["i32x4"]]],[11,"zzxx","","Constructs a new vector from the third, third, first, and…",4,[[],["i32x4"]]],[11,"wzxx","","Constructs a new vector from the fourth, third, first, and…",4,[[],["i32x4"]]],[11,"xwxx","","Constructs a new vector from the first, fourth, first, and…",4,[[],["i32x4"]]],[11,"ywxx","","Constructs a new vector from the second, fourth, first,…",4,[[],["i32x4"]]],[11,"zwxx","","Constructs a new vector from the third, fourth, first, and…",4,[[],["i32x4"]]],[11,"wwxx","","Constructs a new vector from the fourth, fourth, first,…",4,[[],["i32x4"]]],[11,"xxyx","","Constructs a new vector from the first, first, second, and…",4,[[],["i32x4"]]],[11,"yxyx","","Constructs a new vector from the second, first, second,…",4,[[],["i32x4"]]],[11,"zxyx","","Constructs a new vector from the third, first, second, and…",4,[[],["i32x4"]]],[11,"wxyx","","Constructs a new vector from the fourth, first, second,…",4,[[],["i32x4"]]],[11,"xyyx","","Constructs a new vector from the first, second, second,…",4,[[],["i32x4"]]],[11,"yyyx","","Constructs a new vector from the second, second, second,…",4,[[],["i32x4"]]],[11,"zyyx","","Constructs a new vector from the third, second, second,…",4,[[],["i32x4"]]],[11,"wyyx","","Constructs a new vector from the fourth, second, second,…",4,[[],["i32x4"]]],[11,"xzyx","","Constructs a new vector from the first, third, second, and…",4,[[],["i32x4"]]],[11,"yzyx","","Constructs a new vector from the second, third, second,…",4,[[],["i32x4"]]],[11,"zzyx","","Constructs a new vector from the third, third, second, and…",4,[[],["i32x4"]]],[11,"wzyx","","Constructs a new vector from the fourth, third, second,…",4,[[],["i32x4"]]],[11,"xwyx","","Constructs a new vector from the first, fourth, second,…",4,[[],["i32x4"]]],[11,"ywyx","","Constructs a new vector from the second, fourth, second,…",4,[[],["i32x4"]]],[11,"zwyx","","Constructs a new vector from the third, fourth, second,…",4,[[],["i32x4"]]],[11,"wwyx","","Constructs a new vector from the fourth, fourth, second,…",4,[[],["i32x4"]]],[11,"xxzx","","Constructs a new vector from the first, first, third, and…",4,[[],["i32x4"]]],[11,"yxzx","","Constructs a new vector from the second, first, third, and…",4,[[],["i32x4"]]],[11,"zxzx","","Constructs a new vector from the third, first, third, and…",4,[[],["i32x4"]]],[11,"wxzx","","Constructs a new vector from the fourth, first, third, and…",4,[[],["i32x4"]]],[11,"xyzx","","Constructs a new vector from the first, second, third, and…",4,[[],["i32x4"]]],[11,"yyzx","","Constructs a new vector from the second, second, third,…",4,[[],["i32x4"]]],[11,"zyzx","","Constructs a new vector from the third, second, third, and…",4,[[],["i32x4"]]],[11,"wyzx","","Constructs a new vector from the fourth, second, third,…",4,[[],["i32x4"]]],[11,"xzzx","","Constructs a new vector from the first, third, third, and…",4,[[],["i32x4"]]],[11,"yzzx","","Constructs a new vector from the second, third, third, and…",4,[[],["i32x4"]]],[11,"zzzx","","Constructs a new vector from the third, third, third, and…",4,[[],["i32x4"]]],[11,"wzzx","","Constructs a new vector from the fourth, third, third, and…",4,[[],["i32x4"]]],[11,"xwzx","","Constructs a new vector from the first, fourth, third, and…",4,[[],["i32x4"]]],[11,"ywzx","","Constructs a new vector from the second, fourth, third,…",4,[[],["i32x4"]]],[11,"zwzx","","Constructs a new vector from the third, fourth, third, and…",4,[[],["i32x4"]]],[11,"wwzx","","Constructs a new vector from the fourth, fourth, third,…",4,[[],["i32x4"]]],[11,"xxwx","","Constructs a new vector from the first, first, fourth, and…",4,[[],["i32x4"]]],[11,"yxwx","","Constructs a new vector from the second, first, fourth,…",4,[[],["i32x4"]]],[11,"zxwx","","Constructs a new vector from the third, first, fourth, and…",4,[[],["i32x4"]]],[11,"wxwx","","Constructs a new vector from the fourth, first, fourth,…",4,[[],["i32x4"]]],[11,"xywx","","Constructs a new vector from the first, second, fourth,…",4,[[],["i32x4"]]],[11,"yywx","","Constructs a new vector from the second, second, fourth,…",4,[[],["i32x4"]]],[11,"zywx","","Constructs a new vector from the third, second, fourth,…",4,[[],["i32x4"]]],[11,"wywx","","Constructs a new vector from the fourth, second, fourth,…",4,[[],["i32x4"]]],[11,"xzwx","","Constructs a new vector from the first, third, fourth, and…",4,[[],["i32x4"]]],[11,"yzwx","","Constructs a new vector from the second, third, fourth,…",4,[[],["i32x4"]]],[11,"zzwx","","Constructs a new vector from the third, third, fourth, and…",4,[[],["i32x4"]]],[11,"wzwx","","Constructs a new vector from the fourth, third, fourth,…",4,[[],["i32x4"]]],[11,"xwwx","","Constructs a new vector from the first, fourth, fourth,…",4,[[],["i32x4"]]],[11,"ywwx","","Constructs a new vector from the second, fourth, fourth,…",4,[[],["i32x4"]]],[11,"zwwx","","Constructs a new vector from the third, fourth, fourth,…",4,[[],["i32x4"]]],[11,"wwwx","","Constructs a new vector from the fourth, fourth, fourth,…",4,[[],["i32x4"]]],[11,"xxxy","","Constructs a new vector from the first, first, first, and…",4,[[],["i32x4"]]],[11,"yxxy","","Constructs a new vector from the second, first, first, and…",4,[[],["i32x4"]]],[11,"zxxy","","Constructs a new vector from the third, first, first, and…",4,[[],["i32x4"]]],[11,"wxxy","","Constructs a new vector from the fourth, first, first, and…",4,[[],["i32x4"]]],[11,"xyxy","","Constructs a new vector from the first, second, first, and…",4,[[],["i32x4"]]],[11,"yyxy","","Constructs a new vector from the second, second, first,…",4,[[],["i32x4"]]],[11,"zyxy","","Constructs a new vector from the third, second, first, and…",4,[[],["i32x4"]]],[11,"wyxy","","Constructs a new vector from the fourth, second, first,…",4,[[],["i32x4"]]],[11,"xzxy","","Constructs a new vector from the first, third, first, and…",4,[[],["i32x4"]]],[11,"yzxy","","Constructs a new vector from the second, third, first, and…",4,[[],["i32x4"]]],[11,"zzxy","","Constructs a new vector from the third, third, first, and…",4,[[],["i32x4"]]],[11,"wzxy","","Constructs a new vector from the fourth, third, first, and…",4,[[],["i32x4"]]],[11,"xwxy","","Constructs a new vector from the first, fourth, first, and…",4,[[],["i32x4"]]],[11,"ywxy","","Constructs a new vector from the second, fourth, first,…",4,[[],["i32x4"]]],[11,"zwxy","","Constructs a new vector from the third, fourth, first, and…",4,[[],["i32x4"]]],[11,"wwxy","","Constructs a new vector from the fourth, fourth, first,…",4,[[],["i32x4"]]],[11,"xxyy","","Constructs a new vector from the first, first, second, and…",4,[[],["i32x4"]]],[11,"yxyy","","Constructs a new vector from the second, first, second,…",4,[[],["i32x4"]]],[11,"zxyy","","Constructs a new vector from the third, first, second, and…",4,[[],["i32x4"]]],[11,"wxyy","","Constructs a new vector from the fourth, first, second,…",4,[[],["i32x4"]]],[11,"xyyy","","Constructs a new vector from the first, second, second,…",4,[[],["i32x4"]]],[11,"yyyy","","Constructs a new vector from the second, second, second,…",4,[[],["i32x4"]]],[11,"zyyy","","Constructs a new vector from the third, second, second,…",4,[[],["i32x4"]]],[11,"wyyy","","Constructs a new vector from the fourth, second, second,…",4,[[],["i32x4"]]],[11,"xzyy","","Constructs a new vector from the first, third, second, and…",4,[[],["i32x4"]]],[11,"yzyy","","Constructs a new vector from the second, third, second,…",4,[[],["i32x4"]]],[11,"zzyy","","Constructs a new vector from the third, third, second, and…",4,[[],["i32x4"]]],[11,"wzyy","","Constructs a new vector from the fourth, third, second,…",4,[[],["i32x4"]]],[11,"xwyy","","Constructs a new vector from the first, fourth, second,…",4,[[],["i32x4"]]],[11,"ywyy","","Constructs a new vector from the second, fourth, second,…",4,[[],["i32x4"]]],[11,"zwyy","","Constructs a new vector from the third, fourth, second,…",4,[[],["i32x4"]]],[11,"wwyy","","Constructs a new vector from the fourth, fourth, second,…",4,[[],["i32x4"]]],[11,"xxzy","","Constructs a new vector from the first, first, third, and…",4,[[],["i32x4"]]],[11,"yxzy","","Constructs a new vector from the second, first, third, and…",4,[[],["i32x4"]]],[11,"zxzy","","Constructs a new vector from the third, first, third, and…",4,[[],["i32x4"]]],[11,"wxzy","","Constructs a new vector from the fourth, first, third, and…",4,[[],["i32x4"]]],[11,"xyzy","","Constructs a new vector from the first, second, third, and…",4,[[],["i32x4"]]],[11,"yyzy","","Constructs a new vector from the second, second, third,…",4,[[],["i32x4"]]],[11,"zyzy","","Constructs a new vector from the third, second, third, and…",4,[[],["i32x4"]]],[11,"wyzy","","Constructs a new vector from the fourth, second, third,…",4,[[],["i32x4"]]],[11,"xzzy","","Constructs a new vector from the first, third, third, and…",4,[[],["i32x4"]]],[11,"yzzy","","Constructs a new vector from the second, third, third, and…",4,[[],["i32x4"]]],[11,"zzzy","","Constructs a new vector from the third, third, third, and…",4,[[],["i32x4"]]],[11,"wzzy","","Constructs a new vector from the fourth, third, third, and…",4,[[],["i32x4"]]],[11,"xwzy","","Constructs a new vector from the first, fourth, third, and…",4,[[],["i32x4"]]],[11,"ywzy","","Constructs a new vector from the second, fourth, third,…",4,[[],["i32x4"]]],[11,"zwzy","","Constructs a new vector from the third, fourth, third, and…",4,[[],["i32x4"]]],[11,"wwzy","","Constructs a new vector from the fourth, fourth, third,…",4,[[],["i32x4"]]],[11,"xxwy","","Constructs a new vector from the first, first, fourth, and…",4,[[],["i32x4"]]],[11,"yxwy","","Constructs a new vector from the second, first, fourth,…",4,[[],["i32x4"]]],[11,"zxwy","","Constructs a new vector from the third, first, fourth, and…",4,[[],["i32x4"]]],[11,"wxwy","","Constructs a new vector from the fourth, first, fourth,…",4,[[],["i32x4"]]],[11,"xywy","","Constructs a new vector from the first, second, fourth,…",4,[[],["i32x4"]]],[11,"yywy","","Constructs a new vector from the second, second, fourth,…",4,[[],["i32x4"]]],[11,"zywy","","Constructs a new vector from the third, second, fourth,…",4,[[],["i32x4"]]],[11,"wywy","","Constructs a new vector from the fourth, second, fourth,…",4,[[],["i32x4"]]],[11,"xzwy","","Constructs a new vector from the first, third, fourth, and…",4,[[],["i32x4"]]],[11,"yzwy","","Constructs a new vector from the second, third, fourth,…",4,[[],["i32x4"]]],[11,"zzwy","","Constructs a new vector from the third, third, fourth, and…",4,[[],["i32x4"]]],[11,"wzwy","","Constructs a new vector from the fourth, third, fourth,…",4,[[],["i32x4"]]],[11,"xwwy","","Constructs a new vector from the first, fourth, fourth,…",4,[[],["i32x4"]]],[11,"ywwy","","Constructs a new vector from the second, fourth, fourth,…",4,[[],["i32x4"]]],[11,"zwwy","","Constructs a new vector from the third, fourth, fourth,…",4,[[],["i32x4"]]],[11,"wwwy","","Constructs a new vector from the fourth, fourth, fourth,…",4,[[],["i32x4"]]],[11,"xxxz","","Constructs a new vector from the first, first, first, and…",4,[[],["i32x4"]]],[11,"yxxz","","Constructs a new vector from the second, first, first, and…",4,[[],["i32x4"]]],[11,"zxxz","","Constructs a new vector from the third, first, first, and…",4,[[],["i32x4"]]],[11,"wxxz","","Constructs a new vector from the fourth, first, first, and…",4,[[],["i32x4"]]],[11,"xyxz","","Constructs a new vector from the first, second, first, and…",4,[[],["i32x4"]]],[11,"yyxz","","Constructs a new vector from the second, second, first,…",4,[[],["i32x4"]]],[11,"zyxz","","Constructs a new vector from the third, second, first, and…",4,[[],["i32x4"]]],[11,"wyxz","","Constructs a new vector from the fourth, second, first,…",4,[[],["i32x4"]]],[11,"xzxz","","Constructs a new vector from the first, third, first, and…",4,[[],["i32x4"]]],[11,"yzxz","","Constructs a new vector from the second, third, first, and…",4,[[],["i32x4"]]],[11,"zzxz","","Constructs a new vector from the third, third, first, and…",4,[[],["i32x4"]]],[11,"wzxz","","Constructs a new vector from the fourth, third, first, and…",4,[[],["i32x4"]]],[11,"xwxz","","Constructs a new vector from the first, fourth, first, and…",4,[[],["i32x4"]]],[11,"ywxz","","Constructs a new vector from the second, fourth, first,…",4,[[],["i32x4"]]],[11,"zwxz","","Constructs a new vector from the third, fourth, first, and…",4,[[],["i32x4"]]],[11,"wwxz","","Constructs a new vector from the fourth, fourth, first,…",4,[[],["i32x4"]]],[11,"xxyz","","Constructs a new vector from the first, first, second, and…",4,[[],["i32x4"]]],[11,"yxyz","","Constructs a new vector from the second, first, second,…",4,[[],["i32x4"]]],[11,"zxyz","","Constructs a new vector from the third, first, second, and…",4,[[],["i32x4"]]],[11,"wxyz","","Constructs a new vector from the fourth, first, second,…",4,[[],["i32x4"]]],[11,"xyyz","","Constructs a new vector from the first, second, second,…",4,[[],["i32x4"]]],[11,"yyyz","","Constructs a new vector from the second, second, second,…",4,[[],["i32x4"]]],[11,"zyyz","","Constructs a new vector from the third, second, second,…",4,[[],["i32x4"]]],[11,"wyyz","","Constructs a new vector from the fourth, second, second,…",4,[[],["i32x4"]]],[11,"xzyz","","Constructs a new vector from the first, third, second, and…",4,[[],["i32x4"]]],[11,"yzyz","","Constructs a new vector from the second, third, second,…",4,[[],["i32x4"]]],[11,"zzyz","","Constructs a new vector from the third, third, second, and…",4,[[],["i32x4"]]],[11,"wzyz","","Constructs a new vector from the fourth, third, second,…",4,[[],["i32x4"]]],[11,"xwyz","","Constructs a new vector from the first, fourth, second,…",4,[[],["i32x4"]]],[11,"ywyz","","Constructs a new vector from the second, fourth, second,…",4,[[],["i32x4"]]],[11,"zwyz","","Constructs a new vector from the third, fourth, second,…",4,[[],["i32x4"]]],[11,"wwyz","","Constructs a new vector from the fourth, fourth, second,…",4,[[],["i32x4"]]],[11,"xxzz","","Constructs a new vector from the first, first, third, and…",4,[[],["i32x4"]]],[11,"yxzz","","Constructs a new vector from the second, first, third, and…",4,[[],["i32x4"]]],[11,"zxzz","","Constructs a new vector from the third, first, third, and…",4,[[],["i32x4"]]],[11,"wxzz","","Constructs a new vector from the fourth, first, third, and…",4,[[],["i32x4"]]],[11,"xyzz","","Constructs a new vector from the first, second, third, and…",4,[[],["i32x4"]]],[11,"yyzz","","Constructs a new vector from the second, second, third,…",4,[[],["i32x4"]]],[11,"zyzz","","Constructs a new vector from the third, second, third, and…",4,[[],["i32x4"]]],[11,"wyzz","","Constructs a new vector from the fourth, second, third,…",4,[[],["i32x4"]]],[11,"xzzz","","Constructs a new vector from the first, third, third, and…",4,[[],["i32x4"]]],[11,"yzzz","","Constructs a new vector from the second, third, third, and…",4,[[],["i32x4"]]],[11,"zzzz","","Constructs a new vector from the third, third, third, and…",4,[[],["i32x4"]]],[11,"wzzz","","Constructs a new vector from the fourth, third, third, and…",4,[[],["i32x4"]]],[11,"xwzz","","Constructs a new vector from the first, fourth, third, and…",4,[[],["i32x4"]]],[11,"ywzz","","Constructs a new vector from the second, fourth, third,…",4,[[],["i32x4"]]],[11,"zwzz","","Constructs a new vector from the third, fourth, third, and…",4,[[],["i32x4"]]],[11,"wwzz","","Constructs a new vector from the fourth, fourth, third,…",4,[[],["i32x4"]]],[11,"xxwz","","Constructs a new vector from the first, first, fourth, and…",4,[[],["i32x4"]]],[11,"yxwz","","Constructs a new vector from the second, first, fourth,…",4,[[],["i32x4"]]],[11,"zxwz","","Constructs a new vector from the third, first, fourth, and…",4,[[],["i32x4"]]],[11,"wxwz","","Constructs a new vector from the fourth, first, fourth,…",4,[[],["i32x4"]]],[11,"xywz","","Constructs a new vector from the first, second, fourth,…",4,[[],["i32x4"]]],[11,"yywz","","Constructs a new vector from the second, second, fourth,…",4,[[],["i32x4"]]],[11,"zywz","","Constructs a new vector from the third, second, fourth,…",4,[[],["i32x4"]]],[11,"wywz","","Constructs a new vector from the fourth, second, fourth,…",4,[[],["i32x4"]]],[11,"xzwz","","Constructs a new vector from the first, third, fourth, and…",4,[[],["i32x4"]]],[11,"yzwz","","Constructs a new vector from the second, third, fourth,…",4,[[],["i32x4"]]],[11,"zzwz","","Constructs a new vector from the third, third, fourth, and…",4,[[],["i32x4"]]],[11,"wzwz","","Constructs a new vector from the fourth, third, fourth,…",4,[[],["i32x4"]]],[11,"xwwz","","Constructs a new vector from the first, fourth, fourth,…",4,[[],["i32x4"]]],[11,"ywwz","","Constructs a new vector from the second, fourth, fourth,…",4,[[],["i32x4"]]],[11,"zwwz","","Constructs a new vector from the third, fourth, fourth,…",4,[[],["i32x4"]]],[11,"wwwz","","Constructs a new vector from the fourth, fourth, fourth,…",4,[[],["i32x4"]]],[11,"xxxw","","Constructs a new vector from the first, first, first, and…",4,[[],["i32x4"]]],[11,"yxxw","","Constructs a new vector from the second, first, first, and…",4,[[],["i32x4"]]],[11,"zxxw","","Constructs a new vector from the third, first, first, and…",4,[[],["i32x4"]]],[11,"wxxw","","Constructs a new vector from the fourth, first, first, and…",4,[[],["i32x4"]]],[11,"xyxw","","Constructs a new vector from the first, second, first, and…",4,[[],["i32x4"]]],[11,"yyxw","","Constructs a new vector from the second, second, first,…",4,[[],["i32x4"]]],[11,"zyxw","","Constructs a new vector from the third, second, first, and…",4,[[],["i32x4"]]],[11,"wyxw","","Constructs a new vector from the fourth, second, first,…",4,[[],["i32x4"]]],[11,"xzxw","","Constructs a new vector from the first, third, first, and…",4,[[],["i32x4"]]],[11,"yzxw","","Constructs a new vector from the second, third, first, and…",4,[[],["i32x4"]]],[11,"zzxw","","Constructs a new vector from the third, third, first, and…",4,[[],["i32x4"]]],[11,"wzxw","","Constructs a new vector from the fourth, third, first, and…",4,[[],["i32x4"]]],[11,"xwxw","","Constructs a new vector from the first, fourth, first, and…",4,[[],["i32x4"]]],[11,"ywxw","","Constructs a new vector from the second, fourth, first,…",4,[[],["i32x4"]]],[11,"zwxw","","Constructs a new vector from the third, fourth, first, and…",4,[[],["i32x4"]]],[11,"wwxw","","Constructs a new vector from the fourth, fourth, first,…",4,[[],["i32x4"]]],[11,"xxyw","","Constructs a new vector from the first, first, second, and…",4,[[],["i32x4"]]],[11,"yxyw","","Constructs a new vector from the second, first, second,…",4,[[],["i32x4"]]],[11,"zxyw","","Constructs a new vector from the third, first, second, and…",4,[[],["i32x4"]]],[11,"wxyw","","Constructs a new vector from the fourth, first, second,…",4,[[],["i32x4"]]],[11,"xyyw","","Constructs a new vector from the first, second, second,…",4,[[],["i32x4"]]],[11,"yyyw","","Constructs a new vector from the second, second, second,…",4,[[],["i32x4"]]],[11,"zyyw","","Constructs a new vector from the third, second, second,…",4,[[],["i32x4"]]],[11,"wyyw","","Constructs a new vector from the fourth, second, second,…",4,[[],["i32x4"]]],[11,"xzyw","","Constructs a new vector from the first, third, second, and…",4,[[],["i32x4"]]],[11,"yzyw","","Constructs a new vector from the second, third, second,…",4,[[],["i32x4"]]],[11,"zzyw","","Constructs a new vector from the third, third, second, and…",4,[[],["i32x4"]]],[11,"wzyw","","Constructs a new vector from the fourth, third, second,…",4,[[],["i32x4"]]],[11,"xwyw","","Constructs a new vector from the first, fourth, second,…",4,[[],["i32x4"]]],[11,"ywyw","","Constructs a new vector from the second, fourth, second,…",4,[[],["i32x4"]]],[11,"zwyw","","Constructs a new vector from the third, fourth, second,…",4,[[],["i32x4"]]],[11,"wwyw","","Constructs a new vector from the fourth, fourth, second,…",4,[[],["i32x4"]]],[11,"xxzw","","Constructs a new vector from the first, first, third, and…",4,[[],["i32x4"]]],[11,"yxzw","","Constructs a new vector from the second, first, third, and…",4,[[],["i32x4"]]],[11,"zxzw","","Constructs a new vector from the third, first, third, and…",4,[[],["i32x4"]]],[11,"wxzw","","Constructs a new vector from the fourth, first, third, and…",4,[[],["i32x4"]]],[11,"xyzw","","Constructs a new vector from the first, second, third, and…",4,[[],["i32x4"]]],[11,"yyzw","","Constructs a new vector from the second, second, third,…",4,[[],["i32x4"]]],[11,"zyzw","","Constructs a new vector from the third, second, third, and…",4,[[],["i32x4"]]],[11,"wyzw","","Constructs a new vector from the fourth, second, third,…",4,[[],["i32x4"]]],[11,"xzzw","","Constructs a new vector from the first, third, third, and…",4,[[],["i32x4"]]],[11,"yzzw","","Constructs a new vector from the second, third, third, and…",4,[[],["i32x4"]]],[11,"zzzw","","Constructs a new vector from the third, third, third, and…",4,[[],["i32x4"]]],[11,"wzzw","","Constructs a new vector from the fourth, third, third, and…",4,[[],["i32x4"]]],[11,"xwzw","","Constructs a new vector from the first, fourth, third, and…",4,[[],["i32x4"]]],[11,"ywzw","","Constructs a new vector from the second, fourth, third,…",4,[[],["i32x4"]]],[11,"zwzw","","Constructs a new vector from the third, fourth, third, and…",4,[[],["i32x4"]]],[11,"wwzw","","Constructs a new vector from the fourth, fourth, third,…",4,[[],["i32x4"]]],[11,"xxww","","Constructs a new vector from the first, first, fourth, and…",4,[[],["i32x4"]]],[11,"yxww","","Constructs a new vector from the second, first, fourth,…",4,[[],["i32x4"]]],[11,"zxww","","Constructs a new vector from the third, first, fourth, and…",4,[[],["i32x4"]]],[11,"wxww","","Constructs a new vector from the fourth, first, fourth,…",4,[[],["i32x4"]]],[11,"xyww","","Constructs a new vector from the first, second, fourth,…",4,[[],["i32x4"]]],[11,"yyww","","Constructs a new vector from the second, second, fourth,…",4,[[],["i32x4"]]],[11,"zyww","","Constructs a new vector from the third, second, fourth,…",4,[[],["i32x4"]]],[11,"wyww","","Constructs a new vector from the fourth, second, fourth,…",4,[[],["i32x4"]]],[11,"xzww","","Constructs a new vector from the first, third, fourth, and…",4,[[],["i32x4"]]],[11,"yzww","","Constructs a new vector from the second, third, fourth,…",4,[[],["i32x4"]]],[11,"zzww","","Constructs a new vector from the third, third, fourth, and…",4,[[],["i32x4"]]],[11,"wzww","","Constructs a new vector from the fourth, third, fourth,…",4,[[],["i32x4"]]],[11,"xwww","","Constructs a new vector from the first, fourth, fourth,…",4,[[],["i32x4"]]],[11,"ywww","","Constructs a new vector from the second, fourth, fourth,…",4,[[],["i32x4"]]],[11,"zwww","","Constructs a new vector from the third, fourth, fourth,…",4,[[],["i32x4"]]],[11,"wwww","","Constructs a new vector from the fourth, fourth, fourth,…",4,[[],["i32x4"]]],[11,"new","","",0,[[["f32"]],["f32x2"]]],[11,"splat","","",0,[[["f32"]],["f32x2"]]],[11,"approx_recip","","",0,[[],["f32x2"]]],[11,"min","","",0,[[["f32x2"]],["f32x2"]]],[11,"max","","",0,[[["f32x2"]],["f32x2"]]],[11,"clamp","","",0,[[["f32x2"]],["f32x2"]]],[11,"abs","","",0,[[],["f32x2"]]],[11,"floor","","",0,[[],["f32x2"]]],[11,"ceil","","",0,[[],["f32x2"]]],[11,"sqrt","","",0,[[],["f32x2"]]],[11,"packed_eq","","",0,[[["f32x2"]],["u32x2"]]],[11,"packed_gt","","",0,[[["f32x2"]],["u32x2"]]],[11,"packed_lt","","",0,[[["f32x2"]],["u32x2"]]],[11,"packed_le","","",0,[[["f32x2"]],["u32x2"]]],[11,"to_f32x4","","",0,[[],["f32x4"]]],[11,"to_i32x2","","Converts these packed floats to integers via rounding.",0,[[],["i32x2"]]],[11,"to_i32x4","","Converts these packed floats to integers via rounding.",0,[[],["i32x4"]]],[11,"yx","","",0,[[],["f32x2"]]],[11,"concat_xy_xy","","",0,[[["f32x2"]],["f32x4"]]],[11,"new","","",1,[[["f32"]],["f32x4"]]],[11,"splat","","",1,[[["f32"]],["f32x4"]]],[11,"approx_recip","","",1,[[],["f32x4"]]],[11,"min","","",1,[[["f32x4"]],["f32x4"]]],[11,"max","","",1,[[["f32x4"]],["f32x4"]]],[11,"clamp","","",1,[[["f32x4"]],["f32x4"]]],[11,"abs","","",1,[[],["f32x4"]]],[11,"floor","","",1,[[],["f32x4"]]],[11,"ceil","","",1,[[],["f32x4"]]],[11,"sqrt","","",1,[[],["f32x4"]]],[11,"packed_eq","","",1,[[["f32x4"]],["u32x4"]]],[11,"packed_gt","","",1,[[["f32x4"]],["u32x4"]]],[11,"packed_le","","",1,[[["f32x4"]],["u32x4"]]],[11,"packed_lt","","",1,[[["f32x4"]],["u32x4"]]],[11,"to_i32x4","","Converts these packed floats to integers via rounding.",1,[[],["i32x4"]]],[11,"xy","","",1,[[],["f32x2"]]],[11,"xw","","",1,[[],["f32x2"]]],[11,"yx","","",1,[[],["f32x2"]]],[11,"zy","","",1,[[],["f32x2"]]],[11,"zw","","",1,[[],["f32x2"]]],[11,"concat_xy_xy","","",1,[[["f32x4"]],["f32x4"]]],[11,"concat_xy_zw","","",1,[[["f32x4"]],["f32x4"]]],[11,"concat_zw_zw","","",1,[[["f32x4"]],["f32x4"]]],[11,"concat_wz_yx","","",1,[[["f32x4"]],["f32x4"]]],[11,"new","","",5,[[["i32"]],["i32x2"]]],[11,"splat","","",5,[[["i32"]],["i32x2"]]],[11,"x","","",5,[[],["i32"]]],[11,"y","","",5,[[],["i32"]]],[11,"concat_xy_xy","","",5,[[["i32x2"]],["i32x4"]]],[11,"min","","",5,[[["i32x2"]],["i32x2"]]],[11,"max","","",5,[[["i32x2"]],["i32x2"]]],[11,"packed_eq","","",5,[[["i32x2"]],["u32x2"]]],[11,"packed_gt","","",5,[[["i32x2"]],["u32x2"]]],[11,"packed_le","","",5,[[["i32x2"]],["u32x2"]]],[11,"packed_lt","","",5,[[["i32x2"]],["u32x2"]]],[11,"to_f32x2","","Converts these packed integers to floats.",5,[[],["f32x2"]]],[11,"new","","",4,[[["i32"]],["i32x4"]]],[11,"splat","","",4,[[["i32"]],["i32x4"]]],[11,"min","","",4,[[["i32x4"]],["i32x4"]]],[11,"max","","",4,[[["i32x4"]],["i32x4"]]],[11,"packed_eq","","",4,[[["i32x4"]],["u32x4"]]],[11,"packed_gt","","",4,[[["i32x4"]],["u32x4"]]],[11,"packed_le","","",4,[[["i32x4"]],["u32x4"]]],[11,"packed_lt","","",4,[[["i32x4"]],["u32x4"]]],[11,"concat_xy_xy","","",4,[[["i32x4"]],["i32x4"]]],[11,"concat_zw_zw","","",4,[[["i32x4"]],["i32x4"]]],[11,"xy","","",4,[[],["i32x2"]]],[11,"xw","","",4,[[],["i32x2"]]],[11,"zy","","",4,[[],["i32x2"]]],[11,"zw","","",4,[[],["i32x2"]]],[11,"to_f32x4","","Converts these packed integers to floats.",4,[[],["f32x4"]]],[11,"to_u32x4","","Converts these packed signed integers to unsigned integers.",4,[[],["u32x4"]]],[11,"all_true","","Returns true if both booleans in this vector are true.",2,[[["self"]],["bool"]]],[11,"all_false","","Returns true if both booleans in this vector are false.",2,[[["self"]],["bool"]]],[11,"new","","",3,[[["u32"]],["u32x4"]]],[11,"to_i32x4","","Converts these packed unsigned integers to signed integers.",3,[[],["i32x4"]]],[11,"all_true","","Returns true if all four booleans in this vector are true.",3,[[["self"]],["bool"]]],[11,"all_false","","Returns true if all four booleans in this vector are false.",3,[[["self"]],["bool"]]],[0,"x86","pathfinder_simd","",null,null],[3,"F32x2","pathfinder_simd::x86","",null,null],[12,"0","","",6,null],[3,"F32x4","","",null,null],[12,"0","","",7,null],[3,"I32x2","","",null,null],[12,"0","","",8,null],[3,"I32x4","","",null,null],[12,"0","","",9,null],[3,"U32x2","","",null,null],[12,"0","","",10,null],[3,"U32x4","","",null,null],[12,"0","","",11,null],[11,"xxxx","","",7,[[],["f32x4"]]],[11,"yxxx","","",7,[[],["f32x4"]]],[11,"zxxx","","",7,[[],["f32x4"]]],[11,"wxxx","","",7,[[],["f32x4"]]],[11,"xyxx","","",7,[[],["f32x4"]]],[11,"yyxx","","",7,[[],["f32x4"]]],[11,"zyxx","","",7,[[],["f32x4"]]],[11,"wyxx","","",7,[[],["f32x4"]]],[11,"xzxx","","",7,[[],["f32x4"]]],[11,"yzxx","","",7,[[],["f32x4"]]],[11,"zzxx","","",7,[[],["f32x4"]]],[11,"wzxx","","",7,[[],["f32x4"]]],[11,"xwxx","","",7,[[],["f32x4"]]],[11,"ywxx","","",7,[[],["f32x4"]]],[11,"zwxx","","",7,[[],["f32x4"]]],[11,"wwxx","","",7,[[],["f32x4"]]],[11,"xxyx","","",7,[[],["f32x4"]]],[11,"yxyx","","",7,[[],["f32x4"]]],[11,"zxyx","","",7,[[],["f32x4"]]],[11,"wxyx","","",7,[[],["f32x4"]]],[11,"xyyx","","",7,[[],["f32x4"]]],[11,"yyyx","","",7,[[],["f32x4"]]],[11,"zyyx","","",7,[[],["f32x4"]]],[11,"wyyx","","",7,[[],["f32x4"]]],[11,"xzyx","","",7,[[],["f32x4"]]],[11,"yzyx","","",7,[[],["f32x4"]]],[11,"zzyx","","",7,[[],["f32x4"]]],[11,"wzyx","","",7,[[],["f32x4"]]],[11,"xwyx","","",7,[[],["f32x4"]]],[11,"ywyx","","",7,[[],["f32x4"]]],[11,"zwyx","","",7,[[],["f32x4"]]],[11,"wwyx","","",7,[[],["f32x4"]]],[11,"xxzx","","",7,[[],["f32x4"]]],[11,"yxzx","","",7,[[],["f32x4"]]],[11,"zxzx","","",7,[[],["f32x4"]]],[11,"wxzx","","",7,[[],["f32x4"]]],[11,"xyzx","","",7,[[],["f32x4"]]],[11,"yyzx","","",7,[[],["f32x4"]]],[11,"zyzx","","",7,[[],["f32x4"]]],[11,"wyzx","","",7,[[],["f32x4"]]],[11,"xzzx","","",7,[[],["f32x4"]]],[11,"yzzx","","",7,[[],["f32x4"]]],[11,"zzzx","","",7,[[],["f32x4"]]],[11,"wzzx","","",7,[[],["f32x4"]]],[11,"xwzx","","",7,[[],["f32x4"]]],[11,"ywzx","","",7,[[],["f32x4"]]],[11,"zwzx","","",7,[[],["f32x4"]]],[11,"wwzx","","",7,[[],["f32x4"]]],[11,"xxwx","","",7,[[],["f32x4"]]],[11,"yxwx","","",7,[[],["f32x4"]]],[11,"zxwx","","",7,[[],["f32x4"]]],[11,"wxwx","","",7,[[],["f32x4"]]],[11,"xywx","","",7,[[],["f32x4"]]],[11,"yywx","","",7,[[],["f32x4"]]],[11,"zywx","","",7,[[],["f32x4"]]],[11,"wywx","","",7,[[],["f32x4"]]],[11,"xzwx","","",7,[[],["f32x4"]]],[11,"yzwx","","",7,[[],["f32x4"]]],[11,"zzwx","","",7,[[],["f32x4"]]],[11,"wzwx","","",7,[[],["f32x4"]]],[11,"xwwx","","",7,[[],["f32x4"]]],[11,"ywwx","","",7,[[],["f32x4"]]],[11,"zwwx","","",7,[[],["f32x4"]]],[11,"wwwx","","",7,[[],["f32x4"]]],[11,"xxxy","","",7,[[],["f32x4"]]],[11,"yxxy","","",7,[[],["f32x4"]]],[11,"zxxy","","",7,[[],["f32x4"]]],[11,"wxxy","","",7,[[],["f32x4"]]],[11,"xyxy","","",7,[[],["f32x4"]]],[11,"yyxy","","",7,[[],["f32x4"]]],[11,"zyxy","","",7,[[],["f32x4"]]],[11,"wyxy","","",7,[[],["f32x4"]]],[11,"xzxy","","",7,[[],["f32x4"]]],[11,"yzxy","","",7,[[],["f32x4"]]],[11,"zzxy","","",7,[[],["f32x4"]]],[11,"wzxy","","",7,[[],["f32x4"]]],[11,"xwxy","","",7,[[],["f32x4"]]],[11,"ywxy","","",7,[[],["f32x4"]]],[11,"zwxy","","",7,[[],["f32x4"]]],[11,"wwxy","","",7,[[],["f32x4"]]],[11,"xxyy","","",7,[[],["f32x4"]]],[11,"yxyy","","",7,[[],["f32x4"]]],[11,"zxyy","","",7,[[],["f32x4"]]],[11,"wxyy","","",7,[[],["f32x4"]]],[11,"xyyy","","",7,[[],["f32x4"]]],[11,"yyyy","","",7,[[],["f32x4"]]],[11,"zyyy","","",7,[[],["f32x4"]]],[11,"wyyy","","",7,[[],["f32x4"]]],[11,"xzyy","","",7,[[],["f32x4"]]],[11,"yzyy","","",7,[[],["f32x4"]]],[11,"zzyy","","",7,[[],["f32x4"]]],[11,"wzyy","","",7,[[],["f32x4"]]],[11,"xwyy","","",7,[[],["f32x4"]]],[11,"ywyy","","",7,[[],["f32x4"]]],[11,"zwyy","","",7,[[],["f32x4"]]],[11,"wwyy","","",7,[[],["f32x4"]]],[11,"xxzy","","",7,[[],["f32x4"]]],[11,"yxzy","","",7,[[],["f32x4"]]],[11,"zxzy","","",7,[[],["f32x4"]]],[11,"wxzy","","",7,[[],["f32x4"]]],[11,"xyzy","","",7,[[],["f32x4"]]],[11,"yyzy","","",7,[[],["f32x4"]]],[11,"zyzy","","",7,[[],["f32x4"]]],[11,"wyzy","","",7,[[],["f32x4"]]],[11,"xzzy","","",7,[[],["f32x4"]]],[11,"yzzy","","",7,[[],["f32x4"]]],[11,"zzzy","","",7,[[],["f32x4"]]],[11,"wzzy","","",7,[[],["f32x4"]]],[11,"xwzy","","",7,[[],["f32x4"]]],[11,"ywzy","","",7,[[],["f32x4"]]],[11,"zwzy","","",7,[[],["f32x4"]]],[11,"wwzy","","",7,[[],["f32x4"]]],[11,"xxwy","","",7,[[],["f32x4"]]],[11,"yxwy","","",7,[[],["f32x4"]]],[11,"zxwy","","",7,[[],["f32x4"]]],[11,"wxwy","","",7,[[],["f32x4"]]],[11,"xywy","","",7,[[],["f32x4"]]],[11,"yywy","","",7,[[],["f32x4"]]],[11,"zywy","","",7,[[],["f32x4"]]],[11,"wywy","","",7,[[],["f32x4"]]],[11,"xzwy","","",7,[[],["f32x4"]]],[11,"yzwy","","",7,[[],["f32x4"]]],[11,"zzwy","","",7,[[],["f32x4"]]],[11,"wzwy","","",7,[[],["f32x4"]]],[11,"xwwy","","",7,[[],["f32x4"]]],[11,"ywwy","","",7,[[],["f32x4"]]],[11,"zwwy","","",7,[[],["f32x4"]]],[11,"wwwy","","",7,[[],["f32x4"]]],[11,"xxxz","","",7,[[],["f32x4"]]],[11,"yxxz","","",7,[[],["f32x4"]]],[11,"zxxz","","",7,[[],["f32x4"]]],[11,"wxxz","","",7,[[],["f32x4"]]],[11,"xyxz","","",7,[[],["f32x4"]]],[11,"yyxz","","",7,[[],["f32x4"]]],[11,"zyxz","","",7,[[],["f32x4"]]],[11,"wyxz","","",7,[[],["f32x4"]]],[11,"xzxz","","",7,[[],["f32x4"]]],[11,"yzxz","","",7,[[],["f32x4"]]],[11,"zzxz","","",7,[[],["f32x4"]]],[11,"wzxz","","",7,[[],["f32x4"]]],[11,"xwxz","","",7,[[],["f32x4"]]],[11,"ywxz","","",7,[[],["f32x4"]]],[11,"zwxz","","",7,[[],["f32x4"]]],[11,"wwxz","","",7,[[],["f32x4"]]],[11,"xxyz","","",7,[[],["f32x4"]]],[11,"yxyz","","",7,[[],["f32x4"]]],[11,"zxyz","","",7,[[],["f32x4"]]],[11,"wxyz","","",7,[[],["f32x4"]]],[11,"xyyz","","",7,[[],["f32x4"]]],[11,"yyyz","","",7,[[],["f32x4"]]],[11,"zyyz","","",7,[[],["f32x4"]]],[11,"wyyz","","",7,[[],["f32x4"]]],[11,"xzyz","","",7,[[],["f32x4"]]],[11,"yzyz","","",7,[[],["f32x4"]]],[11,"zzyz","","",7,[[],["f32x4"]]],[11,"wzyz","","",7,[[],["f32x4"]]],[11,"xwyz","","",7,[[],["f32x4"]]],[11,"ywyz","","",7,[[],["f32x4"]]],[11,"zwyz","","",7,[[],["f32x4"]]],[11,"wwyz","","",7,[[],["f32x4"]]],[11,"xxzz","","",7,[[],["f32x4"]]],[11,"yxzz","","",7,[[],["f32x4"]]],[11,"zxzz","","",7,[[],["f32x4"]]],[11,"wxzz","","",7,[[],["f32x4"]]],[11,"xyzz","","",7,[[],["f32x4"]]],[11,"yyzz","","",7,[[],["f32x4"]]],[11,"zyzz","","",7,[[],["f32x4"]]],[11,"wyzz","","",7,[[],["f32x4"]]],[11,"xzzz","","",7,[[],["f32x4"]]],[11,"yzzz","","",7,[[],["f32x4"]]],[11,"zzzz","","",7,[[],["f32x4"]]],[11,"wzzz","","",7,[[],["f32x4"]]],[11,"xwzz","","",7,[[],["f32x4"]]],[11,"ywzz","","",7,[[],["f32x4"]]],[11,"zwzz","","",7,[[],["f32x4"]]],[11,"wwzz","","",7,[[],["f32x4"]]],[11,"xxwz","","",7,[[],["f32x4"]]],[11,"yxwz","","",7,[[],["f32x4"]]],[11,"zxwz","","",7,[[],["f32x4"]]],[11,"wxwz","","",7,[[],["f32x4"]]],[11,"xywz","","",7,[[],["f32x4"]]],[11,"yywz","","",7,[[],["f32x4"]]],[11,"zywz","","",7,[[],["f32x4"]]],[11,"wywz","","",7,[[],["f32x4"]]],[11,"xzwz","","",7,[[],["f32x4"]]],[11,"yzwz","","",7,[[],["f32x4"]]],[11,"zzwz","","",7,[[],["f32x4"]]],[11,"wzwz","","",7,[[],["f32x4"]]],[11,"xwwz","","",7,[[],["f32x4"]]],[11,"ywwz","","",7,[[],["f32x4"]]],[11,"zwwz","","",7,[[],["f32x4"]]],[11,"wwwz","","",7,[[],["f32x4"]]],[11,"xxxw","","",7,[[],["f32x4"]]],[11,"yxxw","","",7,[[],["f32x4"]]],[11,"zxxw","","",7,[[],["f32x4"]]],[11,"wxxw","","",7,[[],["f32x4"]]],[11,"xyxw","","",7,[[],["f32x4"]]],[11,"yyxw","","",7,[[],["f32x4"]]],[11,"zyxw","","",7,[[],["f32x4"]]],[11,"wyxw","","",7,[[],["f32x4"]]],[11,"xzxw","","",7,[[],["f32x4"]]],[11,"yzxw","","",7,[[],["f32x4"]]],[11,"zzxw","","",7,[[],["f32x4"]]],[11,"wzxw","","",7,[[],["f32x4"]]],[11,"xwxw","","",7,[[],["f32x4"]]],[11,"ywxw","","",7,[[],["f32x4"]]],[11,"zwxw","","",7,[[],["f32x4"]]],[11,"wwxw","","",7,[[],["f32x4"]]],[11,"xxyw","","",7,[[],["f32x4"]]],[11,"yxyw","","",7,[[],["f32x4"]]],[11,"zxyw","","",7,[[],["f32x4"]]],[11,"wxyw","","",7,[[],["f32x4"]]],[11,"xyyw","","",7,[[],["f32x4"]]],[11,"yyyw","","",7,[[],["f32x4"]]],[11,"zyyw","","",7,[[],["f32x4"]]],[11,"wyyw","","",7,[[],["f32x4"]]],[11,"xzyw","","",7,[[],["f32x4"]]],[11,"yzyw","","",7,[[],["f32x4"]]],[11,"zzyw","","",7,[[],["f32x4"]]],[11,"wzyw","","",7,[[],["f32x4"]]],[11,"xwyw","","",7,[[],["f32x4"]]],[11,"ywyw","","",7,[[],["f32x4"]]],[11,"zwyw","","",7,[[],["f32x4"]]],[11,"wwyw","","",7,[[],["f32x4"]]],[11,"xxzw","","",7,[[],["f32x4"]]],[11,"yxzw","","",7,[[],["f32x4"]]],[11,"zxzw","","",7,[[],["f32x4"]]],[11,"wxzw","","",7,[[],["f32x4"]]],[11,"xyzw","","",7,[[],["f32x4"]]],[11,"yyzw","","",7,[[],["f32x4"]]],[11,"zyzw","","",7,[[],["f32x4"]]],[11,"wyzw","","",7,[[],["f32x4"]]],[11,"xzzw","","",7,[[],["f32x4"]]],[11,"yzzw","","",7,[[],["f32x4"]]],[11,"zzzw","","",7,[[],["f32x4"]]],[11,"wzzw","","",7,[[],["f32x4"]]],[11,"xwzw","","",7,[[],["f32x4"]]],[11,"ywzw","","",7,[[],["f32x4"]]],[11,"zwzw","","",7,[[],["f32x4"]]],[11,"wwzw","","",7,[[],["f32x4"]]],[11,"xxww","","",7,[[],["f32x4"]]],[11,"yxww","","",7,[[],["f32x4"]]],[11,"zxww","","",7,[[],["f32x4"]]],[11,"wxww","","",7,[[],["f32x4"]]],[11,"xyww","","",7,[[],["f32x4"]]],[11,"yyww","","",7,[[],["f32x4"]]],[11,"zyww","","",7,[[],["f32x4"]]],[11,"wyww","","",7,[[],["f32x4"]]],[11,"xzww","","",7,[[],["f32x4"]]],[11,"yzww","","",7,[[],["f32x4"]]],[11,"zzww","","",7,[[],["f32x4"]]],[11,"wzww","","",7,[[],["f32x4"]]],[11,"xwww","","",7,[[],["f32x4"]]],[11,"ywww","","",7,[[],["f32x4"]]],[11,"zwww","","",7,[[],["f32x4"]]],[11,"wwww","","",7,[[],["f32x4"]]],[11,"xxxx","","",9,[[],["i32x4"]]],[11,"yxxx","","",9,[[],["i32x4"]]],[11,"zxxx","","",9,[[],["i32x4"]]],[11,"wxxx","","",9,[[],["i32x4"]]],[11,"xyxx","","",9,[[],["i32x4"]]],[11,"yyxx","","",9,[[],["i32x4"]]],[11,"zyxx","","",9,[[],["i32x4"]]],[11,"wyxx","","",9,[[],["i32x4"]]],[11,"xzxx","","",9,[[],["i32x4"]]],[11,"yzxx","","",9,[[],["i32x4"]]],[11,"zzxx","","",9,[[],["i32x4"]]],[11,"wzxx","","",9,[[],["i32x4"]]],[11,"xwxx","","",9,[[],["i32x4"]]],[11,"ywxx","","",9,[[],["i32x4"]]],[11,"zwxx","","",9,[[],["i32x4"]]],[11,"wwxx","","",9,[[],["i32x4"]]],[11,"xxyx","","",9,[[],["i32x4"]]],[11,"yxyx","","",9,[[],["i32x4"]]],[11,"zxyx","","",9,[[],["i32x4"]]],[11,"wxyx","","",9,[[],["i32x4"]]],[11,"xyyx","","",9,[[],["i32x4"]]],[11,"yyyx","","",9,[[],["i32x4"]]],[11,"zyyx","","",9,[[],["i32x4"]]],[11,"wyyx","","",9,[[],["i32x4"]]],[11,"xzyx","","",9,[[],["i32x4"]]],[11,"yzyx","","",9,[[],["i32x4"]]],[11,"zzyx","","",9,[[],["i32x4"]]],[11,"wzyx","","",9,[[],["i32x4"]]],[11,"xwyx","","",9,[[],["i32x4"]]],[11,"ywyx","","",9,[[],["i32x4"]]],[11,"zwyx","","",9,[[],["i32x4"]]],[11,"wwyx","","",9,[[],["i32x4"]]],[11,"xxzx","","",9,[[],["i32x4"]]],[11,"yxzx","","",9,[[],["i32x4"]]],[11,"zxzx","","",9,[[],["i32x4"]]],[11,"wxzx","","",9,[[],["i32x4"]]],[11,"xyzx","","",9,[[],["i32x4"]]],[11,"yyzx","","",9,[[],["i32x4"]]],[11,"zyzx","","",9,[[],["i32x4"]]],[11,"wyzx","","",9,[[],["i32x4"]]],[11,"xzzx","","",9,[[],["i32x4"]]],[11,"yzzx","","",9,[[],["i32x4"]]],[11,"zzzx","","",9,[[],["i32x4"]]],[11,"wzzx","","",9,[[],["i32x4"]]],[11,"xwzx","","",9,[[],["i32x4"]]],[11,"ywzx","","",9,[[],["i32x4"]]],[11,"zwzx","","",9,[[],["i32x4"]]],[11,"wwzx","","",9,[[],["i32x4"]]],[11,"xxwx","","",9,[[],["i32x4"]]],[11,"yxwx","","",9,[[],["i32x4"]]],[11,"zxwx","","",9,[[],["i32x4"]]],[11,"wxwx","","",9,[[],["i32x4"]]],[11,"xywx","","",9,[[],["i32x4"]]],[11,"yywx","","",9,[[],["i32x4"]]],[11,"zywx","","",9,[[],["i32x4"]]],[11,"wywx","","",9,[[],["i32x4"]]],[11,"xzwx","","",9,[[],["i32x4"]]],[11,"yzwx","","",9,[[],["i32x4"]]],[11,"zzwx","","",9,[[],["i32x4"]]],[11,"wzwx","","",9,[[],["i32x4"]]],[11,"xwwx","","",9,[[],["i32x4"]]],[11,"ywwx","","",9,[[],["i32x4"]]],[11,"zwwx","","",9,[[],["i32x4"]]],[11,"wwwx","","",9,[[],["i32x4"]]],[11,"xxxy","","",9,[[],["i32x4"]]],[11,"yxxy","","",9,[[],["i32x4"]]],[11,"zxxy","","",9,[[],["i32x4"]]],[11,"wxxy","","",9,[[],["i32x4"]]],[11,"xyxy","","",9,[[],["i32x4"]]],[11,"yyxy","","",9,[[],["i32x4"]]],[11,"zyxy","","",9,[[],["i32x4"]]],[11,"wyxy","","",9,[[],["i32x4"]]],[11,"xzxy","","",9,[[],["i32x4"]]],[11,"yzxy","","",9,[[],["i32x4"]]],[11,"zzxy","","",9,[[],["i32x4"]]],[11,"wzxy","","",9,[[],["i32x4"]]],[11,"xwxy","","",9,[[],["i32x4"]]],[11,"ywxy","","",9,[[],["i32x4"]]],[11,"zwxy","","",9,[[],["i32x4"]]],[11,"wwxy","","",9,[[],["i32x4"]]],[11,"xxyy","","",9,[[],["i32x4"]]],[11,"yxyy","","",9,[[],["i32x4"]]],[11,"zxyy","","",9,[[],["i32x4"]]],[11,"wxyy","","",9,[[],["i32x4"]]],[11,"xyyy","","",9,[[],["i32x4"]]],[11,"yyyy","","",9,[[],["i32x4"]]],[11,"zyyy","","",9,[[],["i32x4"]]],[11,"wyyy","","",9,[[],["i32x4"]]],[11,"xzyy","","",9,[[],["i32x4"]]],[11,"yzyy","","",9,[[],["i32x4"]]],[11,"zzyy","","",9,[[],["i32x4"]]],[11,"wzyy","","",9,[[],["i32x4"]]],[11,"xwyy","","",9,[[],["i32x4"]]],[11,"ywyy","","",9,[[],["i32x4"]]],[11,"zwyy","","",9,[[],["i32x4"]]],[11,"wwyy","","",9,[[],["i32x4"]]],[11,"xxzy","","",9,[[],["i32x4"]]],[11,"yxzy","","",9,[[],["i32x4"]]],[11,"zxzy","","",9,[[],["i32x4"]]],[11,"wxzy","","",9,[[],["i32x4"]]],[11,"xyzy","","",9,[[],["i32x4"]]],[11,"yyzy","","",9,[[],["i32x4"]]],[11,"zyzy","","",9,[[],["i32x4"]]],[11,"wyzy","","",9,[[],["i32x4"]]],[11,"xzzy","","",9,[[],["i32x4"]]],[11,"yzzy","","",9,[[],["i32x4"]]],[11,"zzzy","","",9,[[],["i32x4"]]],[11,"wzzy","","",9,[[],["i32x4"]]],[11,"xwzy","","",9,[[],["i32x4"]]],[11,"ywzy","","",9,[[],["i32x4"]]],[11,"zwzy","","",9,[[],["i32x4"]]],[11,"wwzy","","",9,[[],["i32x4"]]],[11,"xxwy","","",9,[[],["i32x4"]]],[11,"yxwy","","",9,[[],["i32x4"]]],[11,"zxwy","","",9,[[],["i32x4"]]],[11,"wxwy","","",9,[[],["i32x4"]]],[11,"xywy","","",9,[[],["i32x4"]]],[11,"yywy","","",9,[[],["i32x4"]]],[11,"zywy","","",9,[[],["i32x4"]]],[11,"wywy","","",9,[[],["i32x4"]]],[11,"xzwy","","",9,[[],["i32x4"]]],[11,"yzwy","","",9,[[],["i32x4"]]],[11,"zzwy","","",9,[[],["i32x4"]]],[11,"wzwy","","",9,[[],["i32x4"]]],[11,"xwwy","","",9,[[],["i32x4"]]],[11,"ywwy","","",9,[[],["i32x4"]]],[11,"zwwy","","",9,[[],["i32x4"]]],[11,"wwwy","","",9,[[],["i32x4"]]],[11,"xxxz","","",9,[[],["i32x4"]]],[11,"yxxz","","",9,[[],["i32x4"]]],[11,"zxxz","","",9,[[],["i32x4"]]],[11,"wxxz","","",9,[[],["i32x4"]]],[11,"xyxz","","",9,[[],["i32x4"]]],[11,"yyxz","","",9,[[],["i32x4"]]],[11,"zyxz","","",9,[[],["i32x4"]]],[11,"wyxz","","",9,[[],["i32x4"]]],[11,"xzxz","","",9,[[],["i32x4"]]],[11,"yzxz","","",9,[[],["i32x4"]]],[11,"zzxz","","",9,[[],["i32x4"]]],[11,"wzxz","","",9,[[],["i32x4"]]],[11,"xwxz","","",9,[[],["i32x4"]]],[11,"ywxz","","",9,[[],["i32x4"]]],[11,"zwxz","","",9,[[],["i32x4"]]],[11,"wwxz","","",9,[[],["i32x4"]]],[11,"xxyz","","",9,[[],["i32x4"]]],[11,"yxyz","","",9,[[],["i32x4"]]],[11,"zxyz","","",9,[[],["i32x4"]]],[11,"wxyz","","",9,[[],["i32x4"]]],[11,"xyyz","","",9,[[],["i32x4"]]],[11,"yyyz","","",9,[[],["i32x4"]]],[11,"zyyz","","",9,[[],["i32x4"]]],[11,"wyyz","","",9,[[],["i32x4"]]],[11,"xzyz","","",9,[[],["i32x4"]]],[11,"yzyz","","",9,[[],["i32x4"]]],[11,"zzyz","","",9,[[],["i32x4"]]],[11,"wzyz","","",9,[[],["i32x4"]]],[11,"xwyz","","",9,[[],["i32x4"]]],[11,"ywyz","","",9,[[],["i32x4"]]],[11,"zwyz","","",9,[[],["i32x4"]]],[11,"wwyz","","",9,[[],["i32x4"]]],[11,"xxzz","","",9,[[],["i32x4"]]],[11,"yxzz","","",9,[[],["i32x4"]]],[11,"zxzz","","",9,[[],["i32x4"]]],[11,"wxzz","","",9,[[],["i32x4"]]],[11,"xyzz","","",9,[[],["i32x4"]]],[11,"yyzz","","",9,[[],["i32x4"]]],[11,"zyzz","","",9,[[],["i32x4"]]],[11,"wyzz","","",9,[[],["i32x4"]]],[11,"xzzz","","",9,[[],["i32x4"]]],[11,"yzzz","","",9,[[],["i32x4"]]],[11,"zzzz","","",9,[[],["i32x4"]]],[11,"wzzz","","",9,[[],["i32x4"]]],[11,"xwzz","","",9,[[],["i32x4"]]],[11,"ywzz","","",9,[[],["i32x4"]]],[11,"zwzz","","",9,[[],["i32x4"]]],[11,"wwzz","","",9,[[],["i32x4"]]],[11,"xxwz","","",9,[[],["i32x4"]]],[11,"yxwz","","",9,[[],["i32x4"]]],[11,"zxwz","","",9,[[],["i32x4"]]],[11,"wxwz","","",9,[[],["i32x4"]]],[11,"xywz","","",9,[[],["i32x4"]]],[11,"yywz","","",9,[[],["i32x4"]]],[11,"zywz","","",9,[[],["i32x4"]]],[11,"wywz","","",9,[[],["i32x4"]]],[11,"xzwz","","",9,[[],["i32x4"]]],[11,"yzwz","","",9,[[],["i32x4"]]],[11,"zzwz","","",9,[[],["i32x4"]]],[11,"wzwz","","",9,[[],["i32x4"]]],[11,"xwwz","","",9,[[],["i32x4"]]],[11,"ywwz","","",9,[[],["i32x4"]]],[11,"zwwz","","",9,[[],["i32x4"]]],[11,"wwwz","","",9,[[],["i32x4"]]],[11,"xxxw","","",9,[[],["i32x4"]]],[11,"yxxw","","",9,[[],["i32x4"]]],[11,"zxxw","","",9,[[],["i32x4"]]],[11,"wxxw","","",9,[[],["i32x4"]]],[11,"xyxw","","",9,[[],["i32x4"]]],[11,"yyxw","","",9,[[],["i32x4"]]],[11,"zyxw","","",9,[[],["i32x4"]]],[11,"wyxw","","",9,[[],["i32x4"]]],[11,"xzxw","","",9,[[],["i32x4"]]],[11,"yzxw","","",9,[[],["i32x4"]]],[11,"zzxw","","",9,[[],["i32x4"]]],[11,"wzxw","","",9,[[],["i32x4"]]],[11,"xwxw","","",9,[[],["i32x4"]]],[11,"ywxw","","",9,[[],["i32x4"]]],[11,"zwxw","","",9,[[],["i32x4"]]],[11,"wwxw","","",9,[[],["i32x4"]]],[11,"xxyw","","",9,[[],["i32x4"]]],[11,"yxyw","","",9,[[],["i32x4"]]],[11,"zxyw","","",9,[[],["i32x4"]]],[11,"wxyw","","",9,[[],["i32x4"]]],[11,"xyyw","","",9,[[],["i32x4"]]],[11,"yyyw","","",9,[[],["i32x4"]]],[11,"zyyw","","",9,[[],["i32x4"]]],[11,"wyyw","","",9,[[],["i32x4"]]],[11,"xzyw","","",9,[[],["i32x4"]]],[11,"yzyw","","",9,[[],["i32x4"]]],[11,"zzyw","","",9,[[],["i32x4"]]],[11,"wzyw","","",9,[[],["i32x4"]]],[11,"xwyw","","",9,[[],["i32x4"]]],[11,"ywyw","","",9,[[],["i32x4"]]],[11,"zwyw","","",9,[[],["i32x4"]]],[11,"wwyw","","",9,[[],["i32x4"]]],[11,"xxzw","","",9,[[],["i32x4"]]],[11,"yxzw","","",9,[[],["i32x4"]]],[11,"zxzw","","",9,[[],["i32x4"]]],[11,"wxzw","","",9,[[],["i32x4"]]],[11,"xyzw","","",9,[[],["i32x4"]]],[11,"yyzw","","",9,[[],["i32x4"]]],[11,"zyzw","","",9,[[],["i32x4"]]],[11,"wyzw","","",9,[[],["i32x4"]]],[11,"xzzw","","",9,[[],["i32x4"]]],[11,"yzzw","","",9,[[],["i32x4"]]],[11,"zzzw","","",9,[[],["i32x4"]]],[11,"wzzw","","",9,[[],["i32x4"]]],[11,"xwzw","","",9,[[],["i32x4"]]],[11,"ywzw","","",9,[[],["i32x4"]]],[11,"zwzw","","",9,[[],["i32x4"]]],[11,"wwzw","","",9,[[],["i32x4"]]],[11,"xxww","","",9,[[],["i32x4"]]],[11,"yxww","","",9,[[],["i32x4"]]],[11,"zxww","","",9,[[],["i32x4"]]],[11,"wxww","","",9,[[],["i32x4"]]],[11,"xyww","","",9,[[],["i32x4"]]],[11,"yyww","","",9,[[],["i32x4"]]],[11,"zyww","","",9,[[],["i32x4"]]],[11,"wyww","","",9,[[],["i32x4"]]],[11,"xzww","","",9,[[],["i32x4"]]],[11,"yzww","","",9,[[],["i32x4"]]],[11,"zzww","","",9,[[],["i32x4"]]],[11,"wzww","","",9,[[],["i32x4"]]],[11,"xwww","","",9,[[],["i32x4"]]],[11,"ywww","","",9,[[],["i32x4"]]],[11,"zwww","","",9,[[],["i32x4"]]],[11,"wwww","","",9,[[],["i32x4"]]],[11,"new","","",6,[[["f32"]],["f32x2"]]],[11,"splat","","",6,[[["f32"]],["f32x2"]]],[11,"approx_recip","","",6,[[],["f32x2"]]],[11,"min","","",6,[[["f32x2"]],["f32x2"]]],[11,"max","","",6,[[["f32x2"]],["f32x2"]]],[11,"clamp","","",6,[[["f32x2"]],["f32x2"]]],[11,"abs","","",6,[[],["f32x2"]]],[11,"floor","","",6,[[],["f32x2"]]],[11,"ceil","","",6,[[],["f32x2"]]],[11,"sqrt","","",6,[[],["f32x2"]]],[11,"packed_eq","","",6,[[["f32x2"]],["u32x2"]]],[11,"packed_gt","","",6,[[["f32x2"]],["u32x2"]]],[11,"packed_lt","","",6,[[["f32x2"]],["u32x2"]]],[11,"packed_le","","",6,[[["f32x2"]],["u32x2"]]],[11,"to_f32x4","","",6,[[],["f32x4"]]],[11,"to_i32x2","","",6,[[],["i32x2"]]],[11,"to_i32x4","","",6,[[],["i32x4"]]],[11,"yx","","",6,[[],["f32x2"]]],[11,"concat_xy_xy","","",6,[[["f32x2"]],["f32x4"]]],[11,"new","","",7,[[["f32"]],["f32x4"]]],[11,"splat","","",7,[[["f32"]],["f32x4"]]],[11,"approx_recip","","",7,[[],["f32x4"]]],[11,"min","","",7,[[["f32x4"]],["f32x4"]]],[11,"max","","",7,[[["f32x4"]],["f32x4"]]],[11,"clamp","","",7,[[["f32x4"]],["f32x4"]]],[11,"abs","","",7,[[],["f32x4"]]],[11,"floor","","",7,[[],["f32x4"]]],[11,"ceil","","",7,[[],["f32x4"]]],[11,"sqrt","","",7,[[],["f32x4"]]],[11,"packed_eq","","",7,[[["f32x4"]],["u32x4"]]],[11,"packed_gt","","",7,[[["f32x4"]],["u32x4"]]],[11,"packed_lt","","",7,[[["f32x4"]],["u32x4"]]],[11,"packed_le","","",7,[[["f32x4"]],["u32x4"]]],[11,"to_i32x4","","Converts these packed floats to integers via rounding.",7,[[],["i32x4"]]],[11,"xy","","",7,[[],["f32x2"]]],[11,"xw","","",7,[[],["f32x2"]]],[11,"yx","","",7,[[],["f32x2"]]],[11,"zy","","",7,[[],["f32x2"]]],[11,"zw","","",7,[[],["f32x2"]]],[11,"concat_xy_xy","","",7,[[["f32x4"]],["f32x4"]]],[11,"concat_xy_zw","","",7,[[["f32x4"]],["f32x4"]]],[11,"concat_zw_zw","","",7,[[["f32x4"]],["f32x4"]]],[11,"concat_wz_yx","","",7,[[["f32x4"]],["f32x4"]]],[11,"new","","",8,[[["i32"]],["i32x2"]]],[11,"splat","","",8,[[["i32"]],["i32x2"]]],[11,"x","","",8,[[],["i32"]]],[11,"y","","",8,[[],["i32"]]],[11,"concat_xy_xy","","",8,[[["i32x2"]],["i32x4"]]],[11,"to_i32x4","","",8,[[],["i32x4"]]],[11,"to_f32x4","","",8,[[],["f32x4"]]],[11,"to_f32x2","","Converts these packed integers to floats.",8,[[],["f32x2"]]],[11,"max","","",8,[[["i32x2"]],["i32x2"]]],[11,"min","","",8,[[["i32x2"]],["i32x2"]]],[11,"packed_eq","","",8,[[["i32x2"]],["u32x4"]]],[11,"packed_gt","","",8,[[["i32x2"]],["u32x4"]]],[11,"packed_le","","",8,[[["i32x2"]],["u32x4"]]],[11,"new","","",9,[[["i32"]],["i32x4"]]],[11,"splat","","",9,[[["i32"]],["i32x4"]]],[11,"xy","","",9,[[],["i32x2"]]],[11,"xw","","",9,[[],["i32x2"]]],[11,"yx","","",9,[[],["i32x2"]]],[11,"zy","","",9,[[],["i32x2"]]],[11,"zw","","",9,[[],["i32x2"]]],[11,"concat_xy_xy","","",9,[[["i32x4"]],["i32x4"]]],[11,"concat_zw_zw","","",9,[[["i32x4"]],["i32x4"]]],[11,"to_f32x4","","Converts these packed integers to floats.",9,[[],["f32x4"]]],[11,"to_u32x4","","Converts these packed signed integers to unsigned integers.",9,[[],["u32x4"]]],[11,"max","","",9,[[["i32x4"]],["i32x4"]]],[11,"min","","",9,[[["i32x4"]],["i32x4"]]],[11,"packed_eq","","",9,[[["i32x4"]],["u32x4"]]],[11,"packed_gt","","",9,[[["i32x4"]],["u32x4"]]],[11,"packed_lt","","",9,[[["i32x4"]],["u32x4"]]],[11,"packed_le","","",9,[[["i32x4"]],["u32x4"]]],[11,"all_true","","Returns true if both booleans in this vector are true.",10,[[],["bool"]]],[11,"all_false","","Returns true if both booleans in this vector are false.",10,[[],["bool"]]],[11,"new","","",11,[[["u32"]],["u32x4"]]],[11,"splat","","",11,[[["u32"]],["u32x4"]]],[11,"to_i32x4","","Converts these packed unsigned integers to signed integers.",11,[[],["i32x4"]]],[11,"all_true","","Returns true if all four booleans in this vector are true.",11,[[],["bool"]]],[11,"all_false","","Returns true if all four booleans in this vector are false.",11,[[],["bool"]]],[11,"xy","","",11,[[],["u32x2"]]],[11,"packed_eq","","",11,[[["u32x4"]],["u32x4"]]],[11,"from","pathfinder_simd::scalar","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","pathfinder_simd::x86","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"clone","pathfinder_simd::scalar","",0,[[["self"]],["f32x2"]]],[11,"clone","","",1,[[["self"]],["f32x4"]]],[11,"clone","","",5,[[["self"]],["i32x2"]]],[11,"clone","","",4,[[["self"]],["i32x4"]]],[11,"clone","","",2,[[["self"]],["u32x2"]]],[11,"clone","","",3,[[["self"]],["u32x4"]]],[11,"clone","pathfinder_simd::x86","",6,[[["self"]],["f32x2"]]],[11,"clone","","",7,[[["self"]],["f32x4"]]],[11,"clone","","",8,[[["self"]],["i32x2"]]],[11,"clone","","",9,[[["self"]],["i32x4"]]],[11,"clone","","",10,[[["self"]],["u32x2"]]],[11,"clone","","",11,[[["self"]],["u32x4"]]],[11,"default","pathfinder_simd::scalar","",0,[[],["f32x2"]]],[11,"default","","",1,[[],["f32x4"]]],[11,"default","","",5,[[],["i32x2"]]],[11,"default","","",4,[[],["i32x4"]]],[11,"default","pathfinder_simd::x86","",6,[[],["f32x2"]]],[11,"default","","",7,[[],["f32x4"]]],[11,"default","","",8,[[],["i32x2"]]],[11,"default","","",9,[[],["i32x4"]]],[11,"eq","pathfinder_simd::scalar","",0,[[["self"],["f32x2"]],["bool"]]],[11,"ne","","",0,[[["self"],["f32x2"]],["bool"]]],[11,"eq","","",1,[[["f32x4"],["self"]],["bool"]]],[11,"ne","","",1,[[["f32x4"],["self"]],["bool"]]],[11,"eq","","",5,[[["i32x2"],["self"]],["bool"]]],[11,"ne","","",5,[[["i32x2"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["i32x4"]],["bool"]]],[11,"ne","","",4,[[["self"],["i32x4"]],["bool"]]],[11,"eq","","",3,[[["self"],["u32x4"]],["bool"]]],[11,"ne","","",3,[[["self"],["u32x4"]],["bool"]]],[11,"eq","pathfinder_simd::x86","",6,[[["self"],["f32x2"]],["bool"]]],[11,"eq","","",7,[[["self"],["f32x4"]],["bool"]]],[11,"eq","","",8,[[["self"],["i32x2"]],["bool"]]],[11,"eq","","",9,[[["i32x4"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["u32x4"]],["bool"]]],[11,"fmt","pathfinder_simd::scalar","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","pathfinder_simd::x86","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"div","pathfinder_simd::scalar","",0,[[["f32x2"]],["f32x2"]]],[11,"div","","",1,[[["f32x4"]],["f32x4"]]],[11,"div","pathfinder_simd::x86","",6,[[["f32x2"]],["f32x2"]]],[11,"div","","",7,[[["f32x4"]],["f32x4"]]],[11,"sub","pathfinder_simd::scalar","",0,[[["f32x2"]],["f32x2"]]],[11,"sub","","",1,[[["f32x4"]],["f32x4"]]],[11,"sub","","",5,[[["i32x2"]],["i32x2"]]],[11,"sub","","",4,[[["i32x4"]],["i32x4"]]],[11,"sub","pathfinder_simd::x86","",6,[[["f32x2"]],["f32x2"]]],[11,"sub","","",7,[[["f32x4"]],["f32x4"]]],[11,"sub","","",8,[[["i32x2"]],["i32x2"]]],[11,"sub","","",9,[[["i32x4"]],["i32x4"]]],[11,"add","pathfinder_simd::scalar","",0,[[["f32x2"]],["f32x2"]]],[11,"add","","",1,[[["f32x4"]],["f32x4"]]],[11,"add","","",5,[[["i32x2"]],["i32x2"]]],[11,"add","","",4,[[["i32x4"]],["i32x4"]]],[11,"add","pathfinder_simd::x86","",6,[[["f32x2"]],["f32x2"]]],[11,"add","","",7,[[["f32x4"]],["f32x4"]]],[11,"add","","",8,[[["i32x2"]],["i32x2"]]],[11,"add","","",9,[[["i32x4"]],["i32x4"]]],[11,"mul","pathfinder_simd::scalar","",0,[[["f32x2"]],["f32x2"]]],[11,"mul","","",1,[[["f32x4"]],["f32x4"]]],[11,"mul","","",5,[[["i32x2"]],["i32x2"]]],[11,"mul","","",4,[[["i32x4"]],["i32x4"]]],[11,"mul","pathfinder_simd::x86","",6,[[["f32x2"]],["f32x2"]]],[11,"mul","","",7,[[["f32x4"]],["f32x4"]]],[11,"mul","","",8,[[["i32x2"]],["i32x2"]]],[11,"mul","","",9,[[["i32x4"]],["i32x4"]]],[11,"neg","","",6,[[],["f32x2"]]],[11,"neg","","",7,[[],["f32x4"]]],[11,"neg","","",8,[[],["i32x2"]]],[11,"neg","","",9,[[],["i32x4"]]],[11,"add_assign","","",6,[[["self"],["f32x2"]]]],[11,"add_assign","","",7,[[["self"],["f32x4"]]]],[11,"add_assign","","",8,[[["i32x2"],["self"]]]],[11,"add_assign","","",9,[[["self"],["i32x4"]]]],[11,"sub_assign","","",6,[[["self"],["f32x2"]]]],[11,"sub_assign","","",7,[[["self"],["f32x4"]]]],[11,"sub_assign","","",8,[[["i32x2"],["self"]]]],[11,"sub_assign","","",9,[[["self"],["i32x4"]]]],[11,"mul_assign","","",6,[[["self"],["f32x2"]]]],[11,"mul_assign","","",7,[[["self"],["f32x4"]]]],[11,"mul_assign","","",8,[[["i32x2"],["self"]]]],[11,"mul_assign","","",9,[[["self"],["i32x4"]]]],[11,"not","","",11,[[],["u32x4"]]],[11,"bitand","pathfinder_simd::scalar","",4,[[["i32x4"]],["i32x4"]]],[11,"bitand","pathfinder_simd::x86","",9,[[["i32x4"]],["i32x4"]]],[11,"bitor","pathfinder_simd::scalar","",4,[[["i32x4"]],["i32x4"]]],[11,"bitor","pathfinder_simd::x86","",9,[[["i32x4"]],["i32x4"]]],[11,"bitxor","","",11,[[["u32x4"]],["u32x4"]]],[11,"shr","pathfinder_simd::scalar","",4,[[["i32x4"]],["i32x4"]]],[11,"shr","","",3,[[["u32"]],["u32x4"]]],[11,"shr","pathfinder_simd::x86","",11,[[["u32"]],["u32x4"]]],[11,"index","pathfinder_simd::scalar","",0,[[["self"],["usize"]],["f32"]]],[11,"index","","",1,[[["self"],["usize"]],["f32"]]],[11,"index","","",5,[[["self"],["usize"]],["i32"]]],[11,"index","","",4,[[["self"],["usize"]],["i32"]]],[11,"index","","",2,[[["self"],["usize"]],["u32"]]],[11,"index","","",3,[[["self"],["usize"]],["u32"]]],[11,"index","pathfinder_simd::x86","",6,[[["self"],["usize"]],["f32"]]],[11,"index","","",7,[[["self"],["usize"]],["f32"]]],[11,"index","","",8,[[["self"],["usize"]],["i32"]]],[11,"index","","",9,[[["self"],["usize"]],["i32"]]],[11,"index","","",11,[[["self"],["usize"]],["u32"]]],[11,"index_mut","pathfinder_simd::scalar","",0,[[["self"],["usize"]],["f32"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["f32"]]],[11,"index_mut","","",5,[[["self"],["usize"]],["i32"]]],[11,"index_mut","","",4,[[["self"],["usize"]],["i32"]]],[11,"index_mut","pathfinder_simd::x86","",6,[[["self"],["usize"]],["f32"]]],[11,"index_mut","","",7,[[["self"],["usize"]],["f32"]]],[11,"index_mut","","",8,[[["self"],["usize"]],["i32"]]],[11,"index_mut","","",9,[[["self"],["usize"]],["i32"]]],[11,"from_slice","","",6,[[],["f32x2"]]],[11,"x","","",6,[[],["f32"]]],[11,"y","","",6,[[],["f32"]]],[11,"set_x","","",6,[[["f32"],["self"]]]],[11,"set_y","","",6,[[["f32"],["self"]]]],[11,"approx_eq","","",6,[[["f32"],["f32x2"]],["bool"]]],[11,"from_slice","","",7,[[],["f32x4"]]],[11,"x","","",7,[[],["f32"]]],[11,"y","","",7,[[],["f32"]]],[11,"z","","",7,[[],["f32"]]],[11,"w","","",7,[[],["f32"]]],[11,"set_x","","",7,[[["f32"],["self"]]]],[11,"set_y","","",7,[[["f32"],["self"]]]],[11,"set_z","","",7,[[["f32"],["self"]]]],[11,"set_w","","",7,[[["f32"],["self"]]]],[11,"approx_eq","","",7,[[["f32"],["f32x4"]],["bool"]]],[11,"x","","",9,[[],["i32"]]],[11,"y","","",9,[[],["i32"]]],[11,"z","","",9,[[],["i32"]]],[11,"w","","",9,[[],["i32"]]]],"p":[[3,"F32x2"],[3,"F32x4"],[3,"U32x2"],[3,"U32x4"],[3,"I32x4"],[3,"I32x2"],[3,"F32x2"],[3,"F32x4"],[3,"I32x2"],[3,"I32x4"],[3,"U32x2"],[3,"U32x4"]]};
searchIndex["vector"] = {"doc":"","i":[[3,"Vector","vector","2D points with 32-bit floating point coordinates.",null,null],[12,"0","","",0,null],[3,"Transform","","An affine transform, optimized with SIMD.",null,null],[12,"matrix","","",1,null],[12,"vector","","",1,null],[3,"Rect","","",null,null],[12,"0","","",2,null],[3,"PathBuilder","","",null,null],[3,"PathStyle","","",null,null],[12,"fill","","",3,null],[12,"stroke","","",3,null],[12,"fill_rule","","",3,null],[4,"FillRule","","",null,null],[13,"EvenOdd","","",4,null],[13,"NonZero","","",4,null],[4,"Paint","","",null,null],[13,"Solid","","",5,null],[13,"Image","","",5,null],[4,"PixelFormat","","",null,null],[13,"L8","","",6,null],[13,"Rgb24","","",6,null],[13,"Rgba32","","",6,null],[6,"Rgba8","","",null,null],[8,"Value","","",null,null],[8,"Contour","","",null,null],[10,"new","","",7,[[],["self"]]],[10,"move_to","","",7,[[["self"],["vector"]]]],[10,"line_to","","",7,[[["self"],["vector"]]]],[10,"quadratic_curve_to","","",7,[[["self"],["vector"]]]],[10,"cubic_curve_to","","",7,[[["self"],["vector"]]]],[10,"close","","",7,[[["self"]]]],[10,"is_empty","","",7,[[["self"]],["bool"]]],[10,"clear","","",7,[[["self"]]]],[8,"Outline","","",null,null],[16,"Contour","","",8,null],[10,"empty","","",8,[[],["self"]]],[10,"add_contour","","",8,[[["self"]]]],[10,"add_outline","","",8,[[["self"]]]],[10,"bounding_box","","",8,[[["self"]],[["option",["rect"]],["rect"]]]],[10,"transform","","",8,[[["transform"]],["self"]]],[10,"clear","","",8,[[["self"]]]],[8,"Surface","","",null,null],[16,"Outline","","",9,null],[16,"Style","","",9,null],[16,"ClipPath","","",9,null],[16,"Image","","",9,null],[10,"new","","",9,[[["vector"]],["self"]]],[10,"build_style","","",9,[[["self"],["pathstyle"]]]],[10,"draw_path","","",9,[[["option"],["self"]]]],[10,"clip_path","","",9,[[["fillrule"],["self"]]]],[10,"texture","","",9,[[["u32"],["pixelformat"],["self"]]]],[11,"new","","",10,[[],["self"]]],[11,"move_to","","",10,[[["self"],["vector"]]]],[11,"line_to","","",10,[[["self"],["vector"]]]],[11,"quadratic_curve_to","","",10,[[["self"],["vector"]]]],[11,"cubic_curve_to","","",10,[[["self"],["vector"]]]],[11,"rect","","",10,[[["self"],["rect"]]]],[11,"close","","",10,[[["self"]]]],[11,"into_outline","","",10,[[],["o"]]],[11,"take","","",10,[[["self"]],["o"]]],[11,"clear","","",10,[[["self"]]]],[11,"pos","","",10,[[["self"]],[["vector"],["option",["vector"]]]]],[11,"white","","",5,[[],["self"]]],[11,"black","","",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"mul_assign","","",1,[[["self"],["transform2f"]]]],[11,"sub","","",0,[[["vector2f"]],["vector2f"]]],[11,"clone","","",1,[[["self"]],["transform2f"]]],[11,"clone","","",0,[[["self"]],["vector2f"]]],[11,"clone","","",2,[[["self"]],["rectf"]]],[11,"eq","","",1,[[["transform2f"],["self"]],["bool"]]],[11,"ne","","",1,[[["transform2f"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["vector2f"]],["bool"]]],[11,"eq","","",2,[[["self"],["rectf"]],["bool"]]],[11,"ne","","",2,[[["self"],["rectf"]],["bool"]]],[11,"default","","",2,[[],["rectf"]]],[11,"default","","",1,[[],["transform2f"]]],[11,"default","","",0,[[],["vector2f"]]],[11,"mul","","",1,[[["transform2f"]],["transform2f"]]],[11,"mul","","",1,[[["rectf"]],["rectf"]]],[11,"mul","","",0,[[["vector2f"]],["vector2f"]]],[11,"mul","","",1,[[["vector2f"]],["vector2f"]]],[11,"mul","","",1,[[["linesegment2f"]],["linesegment2f"]]],[11,"div","","",0,[[["vector2f"]],["vector2f"]]],[11,"neg","","",0,[[],["vector2f"]]],[11,"add","","",0,[[["vector2f"]],["vector2f"]]],[11,"clone","","",10,[[["self"]],["pathbuilder"]]],[11,"clone","","",4,[[["self"]],["fillrule"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"new","","",0,[[["f32"]],["vector2f"]]],[11,"splat","","",0,[[["f32"]],["vector2f"]]],[11,"to_3d","","",0,[[],["vector3f"]]],[11,"to_4d","","",0,[[],["vector4f"]]],[11,"x","","",0,[[],["f32"]]],[11,"y","","",0,[[],["f32"]]],[11,"set_x","","",0,[[["f32"],["self"]]]],[11,"set_y","","",0,[[["f32"],["self"]]]],[11,"min","","",0,[[["vector2f"]],["vector2f"]]],[11,"max","","",0,[[["vector2f"]],["vector2f"]]],[11,"clamp","","",0,[[["vector2f"]],["vector2f"]]],[11,"det","","",0,[[["vector2f"]],["f32"]]],[11,"dot","","",0,[[["vector2f"]],["f32"]]],[11,"scale","","",0,[[["f32"]],["vector2f"]]],[11,"scale_xy","","",0,[[["vector2f"]],["vector2f"]]],[11,"floor","","",0,[[],["vector2f"]]],[11,"ceil","","",0,[[],["vector2f"]]],[11,"round","","Rounds both coordinates to the nearest integer.",0,[[],["vector2f"]]],[11,"square_length","","Treats this point as a vector and calculates its squared…",0,[[],["f32"]]],[11,"length","","Treats this point as a vector and calculates its length.",0,[[],["f32"]]],[11,"normalize","","Treats this point as a vector and normalizes it.",0,[[],["vector2f"]]],[11,"yx","","Swaps y and x.",0,[[],["vector2f"]]],[11,"projection_coefficient","","Returns the coefficient when the given vector `a` is…",0,[[["vector2f"]],["f32"]]],[11,"is_zero","","",0,[[],["bool"]]],[11,"lerp","","",0,[[["f32"],["vector2f"]],["vector2f"]]],[11,"to_i32","","",0,[[],["vector2i"]]],[11,"from_scale","","",1,[[["vector2f"]],["transform2f"]]],[11,"from_uniform_scale","","",1,[[["f32"]],["transform2f"]]],[11,"from_rotation","","",1,[[["f32"]],["transform2f"]]],[11,"from_rotation_vector","","",1,[[["unitvector"]],["transform2f"]]],[11,"from_translation","","",1,[[["vector2f"]],["transform2f"]]],[11,"from_scale_rotation_translation","","",1,[[["f32"],["vector2f"]],["transform2f"]]],[11,"row_major","","",1,[[["f32"]],["transform2f"]]],[11,"to_3d","","",1,[[["self"]],["transform4f"]]],[11,"is_identity","","",1,[[["self"]],["bool"]]],[11,"m11","","",1,[[["self"]],["f32"]]],[11,"m21","","",1,[[["self"]],["f32"]]],[11,"m12","","",1,[[["self"]],["f32"]]],[11,"m22","","",1,[[["self"]],["f32"]]],[11,"translate","","",1,[[["self"],["vector2f"]],["transform2f"]]],[11,"rotate","","",1,[[["f32"],["self"]],["transform2f"]]],[11,"scale","","",1,[[["self"],["vector2f"]],["transform2f"]]],[11,"uniform_scale","","",1,[[["f32"],["self"]],["transform2f"]]],[11,"translation","","Returns the translation part of this matrix.",1,[[["self"]],["vector2f"]]],[11,"rotation","","Returns the rotation angle of this matrix.",1,[[["self"]],["f32"]]],[11,"scale_factor","","Returns the scale factor of this matrix.",1,[[["self"]],["f32"]]],[11,"inverse","","",1,[[["self"]],["transform2f"]]],[11,"new","","",2,[[["vector2f"]],["rectf"]]],[11,"from_points","","",2,[[["vector2f"]],["rectf"]]],[11,"origin","","",2,[[],["vector2f"]]],[11,"size","","",2,[[],["vector2f"]]],[11,"origin_x","","",2,[[],["f32"]]],[11,"origin_y","","",2,[[],["f32"]]],[11,"width","","",2,[[],["f32"]]],[11,"height","","",2,[[],["f32"]]],[11,"upper_right","","",2,[[],["vector2f"]]],[11,"lower_left","","",2,[[],["vector2f"]]],[11,"lower_right","","",2,[[],["vector2f"]]],[11,"set_origin_x","","",2,[[["f32"],["self"]]]],[11,"set_origin_y","","",2,[[["f32"],["self"]]]],[11,"contains_point","","",2,[[["vector2f"]],["bool"]]],[11,"contains_rect","","",2,[[["rectf"]],["bool"]]],[11,"is_empty","","",2,[[],["bool"]]],[11,"union_point","","",2,[[["vector2f"]],["rectf"]]],[11,"union_rect","","",2,[[["rectf"]],["rectf"]]],[11,"intersects","","",2,[[["rectf"]],["bool"]]],[11,"intersection","","",2,[[["rectf"]],[["rectf"],["option",["rectf"]]]]],[11,"min_x","","",2,[[],["f32"]]],[11,"min_y","","",2,[[],["f32"]]],[11,"max_x","","",2,[[],["f32"]]],[11,"max_y","","",2,[[],["f32"]]],[11,"center","","",2,[[],["vector2f"]]],[11,"scale","","",2,[[["f32"]],["rectf"]]],[11,"scale_xy","","",2,[[["vector2f"]],["rectf"]]],[11,"round","","Rounds all points to the nearest integer.",2,[[],["rectf"]]],[11,"round_out","","",2,[[],["rectf"]]],[11,"dilate","","",2,[[["vector2f"]],["rectf"]]],[11,"contract","","",2,[[["vector2f"]],["rectf"]]],[11,"to_i32","","",2,[[["self"]],["recti"]]]],"p":[[3,"Vector"],[3,"Transform"],[3,"Rect"],[3,"PathStyle"],[4,"FillRule"],[4,"Paint"],[4,"PixelFormat"],[8,"Contour"],[8,"Outline"],[8,"Surface"],[3,"PathBuilder"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);